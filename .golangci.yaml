version: "2"
run:
  go: 1.24.0
  issues-exit-code: 1
  tests: false

linters:
  default: all

  disable:
    - canonicalheader
    - cyclop
    - depguard
    - err113 # TODO: This ensures no dynamic errors.
    - exhaustruct
    - funlen
    - gochecknoglobals
    - godox
    - ireturn
    - lll
    - mnd
    - musttag
    - nolintlint
    - prealloc
    - spancheck # TODO: Alan, enable this one as it helps you fixing some telemetry bugs.
    - tagliatelle
    - varnamelen
    - wrapcheck
    - wsl
    - funcorder
    - wsl_v5

    - noinlineerr

  settings:
    nlreturn:
      block-size: 2
    tagliatelle:
      case:
        rules:
          json: snake
          yaml: snake
        use-field-name: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - funcorder
          - asasalint
          - contextcheck
          - dogsled
          - dupl
          - exhaustive
          - forbidigo
          - forcetypeassert
          - gochecknoinits
          - gocognit
          - gocritic
          - gocyclo
          - gosec
          - interfacebloat
          - maintidx
          - makezero
          - nakedret
          - nestif
          - nlreturn
          - nonamedreturns
          - paralleltest
          - perfsprint
          - prealloc
          - predeclared
          - promlinter
          - protogetter
          - rowserrcheck
          - staticcheck
          - tagliatelle
          - testpackage
          - unparam
          - wastedassign
        path: (pkg)\/(model|sidecar|jqer|flow)\/.*
      - linters:
          - err113
        text: 'do not define dynamic errors, use wrapped static errors instead:'
      - linters:
          - gocritic
        text: 'ifElseChain: rewrite if-else to switch statement'
      - linters:
          - errcheck
        text: Rollback` is not checked
      - linters:
          - errchkjson
        text: encoding/json.Encoder
      - linters:
          - errchkjson
        text: encoding/json.Marshal
      - linters:
          - staticcheck
        text: 'SA1029: should not use built-in type string as key for value'
      - linters:
          - revive
        text: 'unused-parameter:'
      - linters:
          - revive
        text: 'empty-block:'
      - linters:
          - revive
        text: 'var-naming:'
      - linters:
          - revive
        text: 'context-as-argument:'
      - linters:
          - revive
        text: 'context-keys-type: should not use basic type'
      - linters:
          - perfsprint
        text: fmt.Errorf can be replaced
      - linters:
          - perfsprint
        text: fmt.Sprintf can be replaced
      - linters:
          - init
        text: don't use `init` function
      - linters:
          - goconst
        text: string `true`
      - linters:
          - goconst
        text: string `false`
      - linters:
          - gochecknoinits
        path: pkg/gateway/plugins/.*

    paths:
      - third_party$
      - builtin$
      - examples$

formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
