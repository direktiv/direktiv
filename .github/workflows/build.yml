name: Build
on:
  workflow_dispatch:
  push:
    tags:
      - v*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Get the version tag
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: release direktiv
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Direktiv Release ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
      # - name: upload direktiv image
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./direktiv.direktiv
      #     asset_name: direktiv.direktiv
      #     asset_content_type: application/octet-stream
      #- name: upload direktiv cli
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: ./direkcli-linux
      #    asset_name: direkcli-linux
      #    asset_content_type: application/octet-stream
      #- name: upload direktiv cli
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: ./direkcli-darwin
      #    asset_name: direkcli-darwin
      #    asset_content_type: application/octet-stream
      #- name: upload direktiv cli
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: ./direkcli-windows.exe
      #    asset_name: direkcli-windows.exe
      #   asset_content_type: application/octet-stream
