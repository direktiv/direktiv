// Code generated by entc, DO NOT EDIT.

package workflow

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the workflow type in the database.
	Label = "workflow"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreated holds the string denoting the created field in the database.
	FieldCreated = "created"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldActive holds the string denoting the active field in the database.
	FieldActive = "active"
	// FieldRevision holds the string denoting the revision field in the database.
	FieldRevision = "revision"
	// FieldWorkflow holds the string denoting the workflow field in the database.
	FieldWorkflow = "workflow"
	// FieldLogToEvents holds the string denoting the logtoevents field in the database.
	FieldLogToEvents = "log_to_events"
	// EdgeNamespace holds the string denoting the namespace edge name in mutations.
	EdgeNamespace = "namespace"
	// EdgeInstances holds the string denoting the instances edge name in mutations.
	EdgeInstances = "instances"
	// EdgeWfevents holds the string denoting the wfevents edge name in mutations.
	EdgeWfevents = "wfevents"
	// Table holds the table name of the workflow in the database.
	Table = "workflows"
	// NamespaceTable is the table the holds the namespace relation/edge.
	NamespaceTable = "workflows"
	// NamespaceInverseTable is the table name for the Namespace entity.
	// It exists in this package in order to avoid circular dependency with the "namespace" package.
	NamespaceInverseTable = "namespaces"
	// NamespaceColumn is the table column denoting the namespace relation/edge.
	NamespaceColumn = "namespace_workflows"
	// InstancesTable is the table the holds the instances relation/edge.
	InstancesTable = "workflow_instances"
	// InstancesInverseTable is the table name for the WorkflowInstance entity.
	// It exists in this package in order to avoid circular dependency with the "workflowinstance" package.
	InstancesInverseTable = "workflow_instances"
	// InstancesColumn is the table column denoting the instances relation/edge.
	InstancesColumn = "workflow_instances"
	// WfeventsTable is the table the holds the wfevents relation/edge.
	WfeventsTable = "workflow_events"
	// WfeventsInverseTable is the table name for the WorkflowEvents entity.
	// It exists in this package in order to avoid circular dependency with the "workflowevents" package.
	WfeventsInverseTable = "workflow_events"
	// WfeventsColumn is the table column denoting the wfevents relation/edge.
	WfeventsColumn = "workflow_wfevents"
)

// Columns holds all SQL columns for workflow fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreated,
	FieldDescription,
	FieldActive,
	FieldRevision,
	FieldWorkflow,
	FieldLogToEvents,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "workflows"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"namespace_workflows",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultCreated holds the default value on creation for the "created" field.
	DefaultCreated func() time.Time
	// DefaultDescription holds the default value on creation for the "description" field.
	DefaultDescription string
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
	// DefaultActive holds the default value on creation for the "active" field.
	DefaultActive bool
	// DefaultRevision holds the default value on creation for the "revision" field.
	DefaultRevision int
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
