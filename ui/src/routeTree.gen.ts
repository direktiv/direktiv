/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as NNamespaceRouteImport } from './routes/n/$namespace/route'
import { Route as NNamespaceSettingsImport } from './routes/n/$namespace/settings'
import { Route as NNamespaceMonitoringImport } from './routes/n/$namespace/monitoring'
import { Route as NNamespaceJqImport } from './routes/n/$namespace/jq'
import { Route as NNamespaceExplorerRouteImport } from './routes/n/$namespace/explorer/route'
import { Route as NNamespaceEventsRouteImport } from './routes/n/$namespace/events/route'
import { Route as NNamespaceServicesIndexImport } from './routes/n/$namespace/services/index'
import { Route as NNamespaceMirrorIndexImport } from './routes/n/$namespace/mirror/index'
import { Route as NNamespaceInstancesIndexImport } from './routes/n/$namespace/instances/index'
import { Route as NNamespaceGatewayIndexImport } from './routes/n/$namespace/gateway/index'
import { Route as NNamespaceExplorerIndexImport } from './routes/n/$namespace/explorer/index'
import { Route as NNamespaceServicesLayoutImport } from './routes/n/$namespace/services/_layout'
import { Route as NNamespaceServicesServiceImport } from './routes/n/$namespace/services/$service'
import { Route as NNamespaceMirrorLayoutImport } from './routes/n/$namespace/mirror/_layout'
import { Route as NNamespaceInstancesLayoutImport } from './routes/n/$namespace/instances/_layout'
import { Route as NNamespaceInstancesIdImport } from './routes/n/$namespace/instances/$id'
import { Route as NNamespaceGatewayConsumersImport } from './routes/n/$namespace/gateway/consumers'
import { Route as NNamespaceEventsListenersImport } from './routes/n/$namespace/events/listeners'
import { Route as NNamespaceEventsHistoryImport } from './routes/n/$namespace/events/history'
import { Route as NNamespaceGatewayRoutesIndexImport } from './routes/n/$namespace/gateway/routes/index'
import { Route as NNamespaceMirrorLogsIdImport } from './routes/n/$namespace/mirror/logs.$id'
import { Route as NNamespaceGatewayRoutesFilenameImport } from './routes/n/$namespace/gateway/routes/$filename'
import { Route as NNamespaceExplorerTreeSplatImport } from './routes/n/$namespace/explorer/tree.$'
import { Route as NNamespaceExplorerServiceSplatImport } from './routes/n/$namespace/explorer/service.$'
import { Route as NNamespaceExplorerEndpointSplatImport } from './routes/n/$namespace/explorer/endpoint.$'
import { Route as NNamespaceExplorerConsumerSplatImport } from './routes/n/$namespace/explorer/consumer.$'
import { Route as NNamespaceExplorerWorkflowSettingsSplatImport } from './routes/n/$namespace/explorer/workflow/settings.$'
import { Route as NNamespaceExplorerWorkflowServicesSplatImport } from './routes/n/$namespace/explorer/workflow/services.$'
import { Route as NNamespaceExplorerWorkflowOverviewSplatImport } from './routes/n/$namespace/explorer/workflow/overview.$'
import { Route as NNamespaceExplorerWorkflowEditSplatImport } from './routes/n/$namespace/explorer/workflow/edit.$'

// Create Virtual Routes

const NNamespaceServicesImport = createFileRoute('/n/$namespace/services')()
const NNamespaceMirrorImport = createFileRoute('/n/$namespace/mirror')()
const NNamespaceInstancesImport = createFileRoute('/n/$namespace/instances')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NNamespaceRouteRoute = NNamespaceRouteImport.update({
  id: '/n/$namespace',
  path: '/n/$namespace',
  getParentRoute: () => rootRoute,
} as any)

const NNamespaceServicesRoute = NNamespaceServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceMirrorRoute = NNamespaceMirrorImport.update({
  id: '/mirror',
  path: '/mirror',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceInstancesRoute = NNamespaceInstancesImport.update({
  id: '/instances',
  path: '/instances',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceSettingsRoute = NNamespaceSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceMonitoringRoute = NNamespaceMonitoringImport.update({
  id: '/monitoring',
  path: '/monitoring',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceJqRoute = NNamespaceJqImport.update({
  id: '/jq',
  path: '/jq',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceExplorerRouteRoute = NNamespaceExplorerRouteImport.update({
  id: '/explorer',
  path: '/explorer',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceEventsRouteRoute = NNamespaceEventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceServicesIndexRoute = NNamespaceServicesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NNamespaceServicesRoute,
} as any)

const NNamespaceMirrorIndexRoute = NNamespaceMirrorIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NNamespaceMirrorRoute,
} as any)

const NNamespaceInstancesIndexRoute = NNamespaceInstancesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NNamespaceInstancesRoute,
} as any)

const NNamespaceGatewayIndexRoute = NNamespaceGatewayIndexImport.update({
  id: '/gateway/',
  path: '/gateway/',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceExplorerIndexRoute = NNamespaceExplorerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NNamespaceExplorerRouteRoute,
} as any)

const NNamespaceServicesLayoutRoute = NNamespaceServicesLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => NNamespaceServicesRoute,
} as any)

const NNamespaceServicesServiceRoute = NNamespaceServicesServiceImport.update({
  id: '/services/$service',
  path: '/services/$service',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceMirrorLayoutRoute = NNamespaceMirrorLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => NNamespaceMirrorRoute,
} as any)

const NNamespaceInstancesLayoutRoute = NNamespaceInstancesLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => NNamespaceInstancesRoute,
} as any)

const NNamespaceInstancesIdRoute = NNamespaceInstancesIdImport.update({
  id: '/instances/$id',
  path: '/instances/$id',
  getParentRoute: () => NNamespaceRouteRoute,
} as any)

const NNamespaceGatewayConsumersRoute = NNamespaceGatewayConsumersImport.update(
  {
    id: '/gateway/consumers',
    path: '/gateway/consumers',
    getParentRoute: () => NNamespaceRouteRoute,
  } as any,
)

const NNamespaceEventsListenersRoute = NNamespaceEventsListenersImport.update({
  id: '/listeners',
  path: '/listeners',
  getParentRoute: () => NNamespaceEventsRouteRoute,
} as any)

const NNamespaceEventsHistoryRoute = NNamespaceEventsHistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => NNamespaceEventsRouteRoute,
} as any)

const NNamespaceGatewayRoutesIndexRoute =
  NNamespaceGatewayRoutesIndexImport.update({
    id: '/gateway/routes/',
    path: '/gateway/routes/',
    getParentRoute: () => NNamespaceRouteRoute,
  } as any)

const NNamespaceMirrorLogsIdRoute = NNamespaceMirrorLogsIdImport.update({
  id: '/logs/$id',
  path: '/logs/$id',
  getParentRoute: () => NNamespaceMirrorRoute,
} as any)

const NNamespaceGatewayRoutesFilenameRoute =
  NNamespaceGatewayRoutesFilenameImport.update({
    id: '/gateway/routes/$filename',
    path: '/gateway/routes/$filename',
    getParentRoute: () => NNamespaceRouteRoute,
  } as any)

const NNamespaceExplorerTreeSplatRoute =
  NNamespaceExplorerTreeSplatImport.update({
    id: '/tree/$',
    path: '/tree/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerServiceSplatRoute =
  NNamespaceExplorerServiceSplatImport.update({
    id: '/service/$',
    path: '/service/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerEndpointSplatRoute =
  NNamespaceExplorerEndpointSplatImport.update({
    id: '/endpoint/$',
    path: '/endpoint/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerConsumerSplatRoute =
  NNamespaceExplorerConsumerSplatImport.update({
    id: '/consumer/$',
    path: '/consumer/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerWorkflowSettingsSplatRoute =
  NNamespaceExplorerWorkflowSettingsSplatImport.update({
    id: '/workflow/settings/$',
    path: '/workflow/settings/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerWorkflowServicesSplatRoute =
  NNamespaceExplorerWorkflowServicesSplatImport.update({
    id: '/workflow/services/$',
    path: '/workflow/services/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerWorkflowOverviewSplatRoute =
  NNamespaceExplorerWorkflowOverviewSplatImport.update({
    id: '/workflow/overview/$',
    path: '/workflow/overview/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

const NNamespaceExplorerWorkflowEditSplatRoute =
  NNamespaceExplorerWorkflowEditSplatImport.update({
    id: '/workflow/edit/$',
    path: '/workflow/edit/$',
    getParentRoute: () => NNamespaceExplorerRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/n/$namespace': {
      id: '/n/$namespace'
      path: '/n/$namespace'
      fullPath: '/n/$namespace'
      preLoaderRoute: typeof NNamespaceRouteImport
      parentRoute: typeof rootRoute
    }
    '/n/$namespace/events': {
      id: '/n/$namespace/events'
      path: '/events'
      fullPath: '/n/$namespace/events'
      preLoaderRoute: typeof NNamespaceEventsRouteImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/explorer': {
      id: '/n/$namespace/explorer'
      path: '/explorer'
      fullPath: '/n/$namespace/explorer'
      preLoaderRoute: typeof NNamespaceExplorerRouteImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/jq': {
      id: '/n/$namespace/jq'
      path: '/jq'
      fullPath: '/n/$namespace/jq'
      preLoaderRoute: typeof NNamespaceJqImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/monitoring': {
      id: '/n/$namespace/monitoring'
      path: '/monitoring'
      fullPath: '/n/$namespace/monitoring'
      preLoaderRoute: typeof NNamespaceMonitoringImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/settings': {
      id: '/n/$namespace/settings'
      path: '/settings'
      fullPath: '/n/$namespace/settings'
      preLoaderRoute: typeof NNamespaceSettingsImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/events/history': {
      id: '/n/$namespace/events/history'
      path: '/history'
      fullPath: '/n/$namespace/events/history'
      preLoaderRoute: typeof NNamespaceEventsHistoryImport
      parentRoute: typeof NNamespaceEventsRouteImport
    }
    '/n/$namespace/events/listeners': {
      id: '/n/$namespace/events/listeners'
      path: '/listeners'
      fullPath: '/n/$namespace/events/listeners'
      preLoaderRoute: typeof NNamespaceEventsListenersImport
      parentRoute: typeof NNamespaceEventsRouteImport
    }
    '/n/$namespace/gateway/consumers': {
      id: '/n/$namespace/gateway/consumers'
      path: '/gateway/consumers'
      fullPath: '/n/$namespace/gateway/consumers'
      preLoaderRoute: typeof NNamespaceGatewayConsumersImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/instances/$id': {
      id: '/n/$namespace/instances/$id'
      path: '/instances/$id'
      fullPath: '/n/$namespace/instances/$id'
      preLoaderRoute: typeof NNamespaceInstancesIdImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/instances': {
      id: '/n/$namespace/instances'
      path: '/instances'
      fullPath: '/n/$namespace/instances'
      preLoaderRoute: typeof NNamespaceInstancesImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/instances/_layout': {
      id: '/n/$namespace/instances/_layout'
      path: '/instances'
      fullPath: '/n/$namespace/instances'
      preLoaderRoute: typeof NNamespaceInstancesLayoutImport
      parentRoute: typeof NNamespaceInstancesRoute
    }
    '/n/$namespace/mirror': {
      id: '/n/$namespace/mirror'
      path: '/mirror'
      fullPath: '/n/$namespace/mirror'
      preLoaderRoute: typeof NNamespaceMirrorImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/mirror/_layout': {
      id: '/n/$namespace/mirror/_layout'
      path: '/mirror'
      fullPath: '/n/$namespace/mirror'
      preLoaderRoute: typeof NNamespaceMirrorLayoutImport
      parentRoute: typeof NNamespaceMirrorRoute
    }
    '/n/$namespace/services/$service': {
      id: '/n/$namespace/services/$service'
      path: '/services/$service'
      fullPath: '/n/$namespace/services/$service'
      preLoaderRoute: typeof NNamespaceServicesServiceImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/services': {
      id: '/n/$namespace/services'
      path: '/services'
      fullPath: '/n/$namespace/services'
      preLoaderRoute: typeof NNamespaceServicesImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/services/_layout': {
      id: '/n/$namespace/services/_layout'
      path: '/services'
      fullPath: '/n/$namespace/services'
      preLoaderRoute: typeof NNamespaceServicesLayoutImport
      parentRoute: typeof NNamespaceServicesRoute
    }
    '/n/$namespace/explorer/': {
      id: '/n/$namespace/explorer/'
      path: '/'
      fullPath: '/n/$namespace/explorer/'
      preLoaderRoute: typeof NNamespaceExplorerIndexImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/gateway/': {
      id: '/n/$namespace/gateway/'
      path: '/gateway'
      fullPath: '/n/$namespace/gateway'
      preLoaderRoute: typeof NNamespaceGatewayIndexImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/instances/': {
      id: '/n/$namespace/instances/'
      path: '/'
      fullPath: '/n/$namespace/instances/'
      preLoaderRoute: typeof NNamespaceInstancesIndexImport
      parentRoute: typeof NNamespaceInstancesImport
    }
    '/n/$namespace/mirror/': {
      id: '/n/$namespace/mirror/'
      path: '/'
      fullPath: '/n/$namespace/mirror/'
      preLoaderRoute: typeof NNamespaceMirrorIndexImport
      parentRoute: typeof NNamespaceMirrorImport
    }
    '/n/$namespace/services/': {
      id: '/n/$namespace/services/'
      path: '/'
      fullPath: '/n/$namespace/services/'
      preLoaderRoute: typeof NNamespaceServicesIndexImport
      parentRoute: typeof NNamespaceServicesImport
    }
    '/n/$namespace/explorer/consumer/$': {
      id: '/n/$namespace/explorer/consumer/$'
      path: '/consumer/$'
      fullPath: '/n/$namespace/explorer/consumer/$'
      preLoaderRoute: typeof NNamespaceExplorerConsumerSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/explorer/endpoint/$': {
      id: '/n/$namespace/explorer/endpoint/$'
      path: '/endpoint/$'
      fullPath: '/n/$namespace/explorer/endpoint/$'
      preLoaderRoute: typeof NNamespaceExplorerEndpointSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/explorer/service/$': {
      id: '/n/$namespace/explorer/service/$'
      path: '/service/$'
      fullPath: '/n/$namespace/explorer/service/$'
      preLoaderRoute: typeof NNamespaceExplorerServiceSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/explorer/tree/$': {
      id: '/n/$namespace/explorer/tree/$'
      path: '/tree/$'
      fullPath: '/n/$namespace/explorer/tree/$'
      preLoaderRoute: typeof NNamespaceExplorerTreeSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/gateway/routes/$filename': {
      id: '/n/$namespace/gateway/routes/$filename'
      path: '/gateway/routes/$filename'
      fullPath: '/n/$namespace/gateway/routes/$filename'
      preLoaderRoute: typeof NNamespaceGatewayRoutesFilenameImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/mirror/logs/$id': {
      id: '/n/$namespace/mirror/logs/$id'
      path: '/logs/$id'
      fullPath: '/n/$namespace/mirror/logs/$id'
      preLoaderRoute: typeof NNamespaceMirrorLogsIdImport
      parentRoute: typeof NNamespaceMirrorImport
    }
    '/n/$namespace/gateway/routes/': {
      id: '/n/$namespace/gateway/routes/'
      path: '/gateway/routes'
      fullPath: '/n/$namespace/gateway/routes'
      preLoaderRoute: typeof NNamespaceGatewayRoutesIndexImport
      parentRoute: typeof NNamespaceRouteImport
    }
    '/n/$namespace/explorer/workflow/edit/$': {
      id: '/n/$namespace/explorer/workflow/edit/$'
      path: '/workflow/edit/$'
      fullPath: '/n/$namespace/explorer/workflow/edit/$'
      preLoaderRoute: typeof NNamespaceExplorerWorkflowEditSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/explorer/workflow/overview/$': {
      id: '/n/$namespace/explorer/workflow/overview/$'
      path: '/workflow/overview/$'
      fullPath: '/n/$namespace/explorer/workflow/overview/$'
      preLoaderRoute: typeof NNamespaceExplorerWorkflowOverviewSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/explorer/workflow/services/$': {
      id: '/n/$namespace/explorer/workflow/services/$'
      path: '/workflow/services/$'
      fullPath: '/n/$namespace/explorer/workflow/services/$'
      preLoaderRoute: typeof NNamespaceExplorerWorkflowServicesSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
    '/n/$namespace/explorer/workflow/settings/$': {
      id: '/n/$namespace/explorer/workflow/settings/$'
      path: '/workflow/settings/$'
      fullPath: '/n/$namespace/explorer/workflow/settings/$'
      preLoaderRoute: typeof NNamespaceExplorerWorkflowSettingsSplatImport
      parentRoute: typeof NNamespaceExplorerRouteImport
    }
  }
}

// Create and export the route tree

interface NNamespaceEventsRouteRouteChildren {
  NNamespaceEventsHistoryRoute: typeof NNamespaceEventsHistoryRoute
  NNamespaceEventsListenersRoute: typeof NNamespaceEventsListenersRoute
}

const NNamespaceEventsRouteRouteChildren: NNamespaceEventsRouteRouteChildren = {
  NNamespaceEventsHistoryRoute: NNamespaceEventsHistoryRoute,
  NNamespaceEventsListenersRoute: NNamespaceEventsListenersRoute,
}

const NNamespaceEventsRouteRouteWithChildren =
  NNamespaceEventsRouteRoute._addFileChildren(
    NNamespaceEventsRouteRouteChildren,
  )

interface NNamespaceExplorerRouteRouteChildren {
  NNamespaceExplorerIndexRoute: typeof NNamespaceExplorerIndexRoute
  NNamespaceExplorerConsumerSplatRoute: typeof NNamespaceExplorerConsumerSplatRoute
  NNamespaceExplorerEndpointSplatRoute: typeof NNamespaceExplorerEndpointSplatRoute
  NNamespaceExplorerServiceSplatRoute: typeof NNamespaceExplorerServiceSplatRoute
  NNamespaceExplorerTreeSplatRoute: typeof NNamespaceExplorerTreeSplatRoute
  NNamespaceExplorerWorkflowEditSplatRoute: typeof NNamespaceExplorerWorkflowEditSplatRoute
  NNamespaceExplorerWorkflowOverviewSplatRoute: typeof NNamespaceExplorerWorkflowOverviewSplatRoute
  NNamespaceExplorerWorkflowServicesSplatRoute: typeof NNamespaceExplorerWorkflowServicesSplatRoute
  NNamespaceExplorerWorkflowSettingsSplatRoute: typeof NNamespaceExplorerWorkflowSettingsSplatRoute
}

const NNamespaceExplorerRouteRouteChildren: NNamespaceExplorerRouteRouteChildren =
  {
    NNamespaceExplorerIndexRoute: NNamespaceExplorerIndexRoute,
    NNamespaceExplorerConsumerSplatRoute: NNamespaceExplorerConsumerSplatRoute,
    NNamespaceExplorerEndpointSplatRoute: NNamespaceExplorerEndpointSplatRoute,
    NNamespaceExplorerServiceSplatRoute: NNamespaceExplorerServiceSplatRoute,
    NNamespaceExplorerTreeSplatRoute: NNamespaceExplorerTreeSplatRoute,
    NNamespaceExplorerWorkflowEditSplatRoute:
      NNamespaceExplorerWorkflowEditSplatRoute,
    NNamespaceExplorerWorkflowOverviewSplatRoute:
      NNamespaceExplorerWorkflowOverviewSplatRoute,
    NNamespaceExplorerWorkflowServicesSplatRoute:
      NNamespaceExplorerWorkflowServicesSplatRoute,
    NNamespaceExplorerWorkflowSettingsSplatRoute:
      NNamespaceExplorerWorkflowSettingsSplatRoute,
  }

const NNamespaceExplorerRouteRouteWithChildren =
  NNamespaceExplorerRouteRoute._addFileChildren(
    NNamespaceExplorerRouteRouteChildren,
  )

interface NNamespaceInstancesRouteChildren {
  NNamespaceInstancesLayoutRoute: typeof NNamespaceInstancesLayoutRoute
  NNamespaceInstancesIndexRoute: typeof NNamespaceInstancesIndexRoute
}

const NNamespaceInstancesRouteChildren: NNamespaceInstancesRouteChildren = {
  NNamespaceInstancesLayoutRoute: NNamespaceInstancesLayoutRoute,
  NNamespaceInstancesIndexRoute: NNamespaceInstancesIndexRoute,
}

const NNamespaceInstancesRouteWithChildren =
  NNamespaceInstancesRoute._addFileChildren(NNamespaceInstancesRouteChildren)

interface NNamespaceMirrorRouteChildren {
  NNamespaceMirrorLayoutRoute: typeof NNamespaceMirrorLayoutRoute
  NNamespaceMirrorIndexRoute: typeof NNamespaceMirrorIndexRoute
  NNamespaceMirrorLogsIdRoute: typeof NNamespaceMirrorLogsIdRoute
}

const NNamespaceMirrorRouteChildren: NNamespaceMirrorRouteChildren = {
  NNamespaceMirrorLayoutRoute: NNamespaceMirrorLayoutRoute,
  NNamespaceMirrorIndexRoute: NNamespaceMirrorIndexRoute,
  NNamespaceMirrorLogsIdRoute: NNamespaceMirrorLogsIdRoute,
}

const NNamespaceMirrorRouteWithChildren =
  NNamespaceMirrorRoute._addFileChildren(NNamespaceMirrorRouteChildren)

interface NNamespaceServicesRouteChildren {
  NNamespaceServicesLayoutRoute: typeof NNamespaceServicesLayoutRoute
  NNamespaceServicesIndexRoute: typeof NNamespaceServicesIndexRoute
}

const NNamespaceServicesRouteChildren: NNamespaceServicesRouteChildren = {
  NNamespaceServicesLayoutRoute: NNamespaceServicesLayoutRoute,
  NNamespaceServicesIndexRoute: NNamespaceServicesIndexRoute,
}

const NNamespaceServicesRouteWithChildren =
  NNamespaceServicesRoute._addFileChildren(NNamespaceServicesRouteChildren)

interface NNamespaceRouteRouteChildren {
  NNamespaceEventsRouteRoute: typeof NNamespaceEventsRouteRouteWithChildren
  NNamespaceExplorerRouteRoute: typeof NNamespaceExplorerRouteRouteWithChildren
  NNamespaceJqRoute: typeof NNamespaceJqRoute
  NNamespaceMonitoringRoute: typeof NNamespaceMonitoringRoute
  NNamespaceSettingsRoute: typeof NNamespaceSettingsRoute
  NNamespaceGatewayConsumersRoute: typeof NNamespaceGatewayConsumersRoute
  NNamespaceInstancesIdRoute: typeof NNamespaceInstancesIdRoute
  NNamespaceInstancesRoute: typeof NNamespaceInstancesRouteWithChildren
  NNamespaceMirrorRoute: typeof NNamespaceMirrorRouteWithChildren
  NNamespaceServicesServiceRoute: typeof NNamespaceServicesServiceRoute
  NNamespaceServicesRoute: typeof NNamespaceServicesRouteWithChildren
  NNamespaceGatewayIndexRoute: typeof NNamespaceGatewayIndexRoute
  NNamespaceGatewayRoutesFilenameRoute: typeof NNamespaceGatewayRoutesFilenameRoute
  NNamespaceGatewayRoutesIndexRoute: typeof NNamespaceGatewayRoutesIndexRoute
}

const NNamespaceRouteRouteChildren: NNamespaceRouteRouteChildren = {
  NNamespaceEventsRouteRoute: NNamespaceEventsRouteRouteWithChildren,
  NNamespaceExplorerRouteRoute: NNamespaceExplorerRouteRouteWithChildren,
  NNamespaceJqRoute: NNamespaceJqRoute,
  NNamespaceMonitoringRoute: NNamespaceMonitoringRoute,
  NNamespaceSettingsRoute: NNamespaceSettingsRoute,
  NNamespaceGatewayConsumersRoute: NNamespaceGatewayConsumersRoute,
  NNamespaceInstancesIdRoute: NNamespaceInstancesIdRoute,
  NNamespaceInstancesRoute: NNamespaceInstancesRouteWithChildren,
  NNamespaceMirrorRoute: NNamespaceMirrorRouteWithChildren,
  NNamespaceServicesServiceRoute: NNamespaceServicesServiceRoute,
  NNamespaceServicesRoute: NNamespaceServicesRouteWithChildren,
  NNamespaceGatewayIndexRoute: NNamespaceGatewayIndexRoute,
  NNamespaceGatewayRoutesFilenameRoute: NNamespaceGatewayRoutesFilenameRoute,
  NNamespaceGatewayRoutesIndexRoute: NNamespaceGatewayRoutesIndexRoute,
}

const NNamespaceRouteRouteWithChildren = NNamespaceRouteRoute._addFileChildren(
  NNamespaceRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/n/$namespace': typeof NNamespaceRouteRouteWithChildren
  '/n/$namespace/events': typeof NNamespaceEventsRouteRouteWithChildren
  '/n/$namespace/explorer': typeof NNamespaceExplorerRouteRouteWithChildren
  '/n/$namespace/jq': typeof NNamespaceJqRoute
  '/n/$namespace/monitoring': typeof NNamespaceMonitoringRoute
  '/n/$namespace/settings': typeof NNamespaceSettingsRoute
  '/n/$namespace/events/history': typeof NNamespaceEventsHistoryRoute
  '/n/$namespace/events/listeners': typeof NNamespaceEventsListenersRoute
  '/n/$namespace/gateway/consumers': typeof NNamespaceGatewayConsumersRoute
  '/n/$namespace/instances/$id': typeof NNamespaceInstancesIdRoute
  '/n/$namespace/instances': typeof NNamespaceInstancesLayoutRoute
  '/n/$namespace/mirror': typeof NNamespaceMirrorLayoutRoute
  '/n/$namespace/services/$service': typeof NNamespaceServicesServiceRoute
  '/n/$namespace/services': typeof NNamespaceServicesLayoutRoute
  '/n/$namespace/explorer/': typeof NNamespaceExplorerIndexRoute
  '/n/$namespace/gateway': typeof NNamespaceGatewayIndexRoute
  '/n/$namespace/instances/': typeof NNamespaceInstancesIndexRoute
  '/n/$namespace/mirror/': typeof NNamespaceMirrorIndexRoute
  '/n/$namespace/services/': typeof NNamespaceServicesIndexRoute
  '/n/$namespace/explorer/consumer/$': typeof NNamespaceExplorerConsumerSplatRoute
  '/n/$namespace/explorer/endpoint/$': typeof NNamespaceExplorerEndpointSplatRoute
  '/n/$namespace/explorer/service/$': typeof NNamespaceExplorerServiceSplatRoute
  '/n/$namespace/explorer/tree/$': typeof NNamespaceExplorerTreeSplatRoute
  '/n/$namespace/gateway/routes/$filename': typeof NNamespaceGatewayRoutesFilenameRoute
  '/n/$namespace/mirror/logs/$id': typeof NNamespaceMirrorLogsIdRoute
  '/n/$namespace/gateway/routes': typeof NNamespaceGatewayRoutesIndexRoute
  '/n/$namespace/explorer/workflow/edit/$': typeof NNamespaceExplorerWorkflowEditSplatRoute
  '/n/$namespace/explorer/workflow/overview/$': typeof NNamespaceExplorerWorkflowOverviewSplatRoute
  '/n/$namespace/explorer/workflow/services/$': typeof NNamespaceExplorerWorkflowServicesSplatRoute
  '/n/$namespace/explorer/workflow/settings/$': typeof NNamespaceExplorerWorkflowSettingsSplatRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/n/$namespace': typeof NNamespaceRouteRouteWithChildren
  '/n/$namespace/events': typeof NNamespaceEventsRouteRouteWithChildren
  '/n/$namespace/jq': typeof NNamespaceJqRoute
  '/n/$namespace/monitoring': typeof NNamespaceMonitoringRoute
  '/n/$namespace/settings': typeof NNamespaceSettingsRoute
  '/n/$namespace/events/history': typeof NNamespaceEventsHistoryRoute
  '/n/$namespace/events/listeners': typeof NNamespaceEventsListenersRoute
  '/n/$namespace/gateway/consumers': typeof NNamespaceGatewayConsumersRoute
  '/n/$namespace/instances/$id': typeof NNamespaceInstancesIdRoute
  '/n/$namespace/instances': typeof NNamespaceInstancesIndexRoute
  '/n/$namespace/mirror': typeof NNamespaceMirrorIndexRoute
  '/n/$namespace/services/$service': typeof NNamespaceServicesServiceRoute
  '/n/$namespace/services': typeof NNamespaceServicesIndexRoute
  '/n/$namespace/explorer': typeof NNamespaceExplorerIndexRoute
  '/n/$namespace/gateway': typeof NNamespaceGatewayIndexRoute
  '/n/$namespace/explorer/consumer/$': typeof NNamespaceExplorerConsumerSplatRoute
  '/n/$namespace/explorer/endpoint/$': typeof NNamespaceExplorerEndpointSplatRoute
  '/n/$namespace/explorer/service/$': typeof NNamespaceExplorerServiceSplatRoute
  '/n/$namespace/explorer/tree/$': typeof NNamespaceExplorerTreeSplatRoute
  '/n/$namespace/gateway/routes/$filename': typeof NNamespaceGatewayRoutesFilenameRoute
  '/n/$namespace/mirror/logs/$id': typeof NNamespaceMirrorLogsIdRoute
  '/n/$namespace/gateway/routes': typeof NNamespaceGatewayRoutesIndexRoute
  '/n/$namespace/explorer/workflow/edit/$': typeof NNamespaceExplorerWorkflowEditSplatRoute
  '/n/$namespace/explorer/workflow/overview/$': typeof NNamespaceExplorerWorkflowOverviewSplatRoute
  '/n/$namespace/explorer/workflow/services/$': typeof NNamespaceExplorerWorkflowServicesSplatRoute
  '/n/$namespace/explorer/workflow/settings/$': typeof NNamespaceExplorerWorkflowSettingsSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/n/$namespace': typeof NNamespaceRouteRouteWithChildren
  '/n/$namespace/events': typeof NNamespaceEventsRouteRouteWithChildren
  '/n/$namespace/explorer': typeof NNamespaceExplorerRouteRouteWithChildren
  '/n/$namespace/jq': typeof NNamespaceJqRoute
  '/n/$namespace/monitoring': typeof NNamespaceMonitoringRoute
  '/n/$namespace/settings': typeof NNamespaceSettingsRoute
  '/n/$namespace/events/history': typeof NNamespaceEventsHistoryRoute
  '/n/$namespace/events/listeners': typeof NNamespaceEventsListenersRoute
  '/n/$namespace/gateway/consumers': typeof NNamespaceGatewayConsumersRoute
  '/n/$namespace/instances/$id': typeof NNamespaceInstancesIdRoute
  '/n/$namespace/instances': typeof NNamespaceInstancesRouteWithChildren
  '/n/$namespace/instances/_layout': typeof NNamespaceInstancesLayoutRoute
  '/n/$namespace/mirror': typeof NNamespaceMirrorRouteWithChildren
  '/n/$namespace/mirror/_layout': typeof NNamespaceMirrorLayoutRoute
  '/n/$namespace/services/$service': typeof NNamespaceServicesServiceRoute
  '/n/$namespace/services': typeof NNamespaceServicesRouteWithChildren
  '/n/$namespace/services/_layout': typeof NNamespaceServicesLayoutRoute
  '/n/$namespace/explorer/': typeof NNamespaceExplorerIndexRoute
  '/n/$namespace/gateway/': typeof NNamespaceGatewayIndexRoute
  '/n/$namespace/instances/': typeof NNamespaceInstancesIndexRoute
  '/n/$namespace/mirror/': typeof NNamespaceMirrorIndexRoute
  '/n/$namespace/services/': typeof NNamespaceServicesIndexRoute
  '/n/$namespace/explorer/consumer/$': typeof NNamespaceExplorerConsumerSplatRoute
  '/n/$namespace/explorer/endpoint/$': typeof NNamespaceExplorerEndpointSplatRoute
  '/n/$namespace/explorer/service/$': typeof NNamespaceExplorerServiceSplatRoute
  '/n/$namespace/explorer/tree/$': typeof NNamespaceExplorerTreeSplatRoute
  '/n/$namespace/gateway/routes/$filename': typeof NNamespaceGatewayRoutesFilenameRoute
  '/n/$namespace/mirror/logs/$id': typeof NNamespaceMirrorLogsIdRoute
  '/n/$namespace/gateway/routes/': typeof NNamespaceGatewayRoutesIndexRoute
  '/n/$namespace/explorer/workflow/edit/$': typeof NNamespaceExplorerWorkflowEditSplatRoute
  '/n/$namespace/explorer/workflow/overview/$': typeof NNamespaceExplorerWorkflowOverviewSplatRoute
  '/n/$namespace/explorer/workflow/services/$': typeof NNamespaceExplorerWorkflowServicesSplatRoute
  '/n/$namespace/explorer/workflow/settings/$': typeof NNamespaceExplorerWorkflowSettingsSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/n/$namespace'
    | '/n/$namespace/events'
    | '/n/$namespace/explorer'
    | '/n/$namespace/jq'
    | '/n/$namespace/monitoring'
    | '/n/$namespace/settings'
    | '/n/$namespace/events/history'
    | '/n/$namespace/events/listeners'
    | '/n/$namespace/gateway/consumers'
    | '/n/$namespace/instances/$id'
    | '/n/$namespace/instances'
    | '/n/$namespace/mirror'
    | '/n/$namespace/services/$service'
    | '/n/$namespace/services'
    | '/n/$namespace/explorer/'
    | '/n/$namespace/gateway'
    | '/n/$namespace/instances/'
    | '/n/$namespace/mirror/'
    | '/n/$namespace/services/'
    | '/n/$namespace/explorer/consumer/$'
    | '/n/$namespace/explorer/endpoint/$'
    | '/n/$namespace/explorer/service/$'
    | '/n/$namespace/explorer/tree/$'
    | '/n/$namespace/gateway/routes/$filename'
    | '/n/$namespace/mirror/logs/$id'
    | '/n/$namespace/gateway/routes'
    | '/n/$namespace/explorer/workflow/edit/$'
    | '/n/$namespace/explorer/workflow/overview/$'
    | '/n/$namespace/explorer/workflow/services/$'
    | '/n/$namespace/explorer/workflow/settings/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/n/$namespace'
    | '/n/$namespace/events'
    | '/n/$namespace/jq'
    | '/n/$namespace/monitoring'
    | '/n/$namespace/settings'
    | '/n/$namespace/events/history'
    | '/n/$namespace/events/listeners'
    | '/n/$namespace/gateway/consumers'
    | '/n/$namespace/instances/$id'
    | '/n/$namespace/instances'
    | '/n/$namespace/mirror'
    | '/n/$namespace/services/$service'
    | '/n/$namespace/services'
    | '/n/$namespace/explorer'
    | '/n/$namespace/gateway'
    | '/n/$namespace/explorer/consumer/$'
    | '/n/$namespace/explorer/endpoint/$'
    | '/n/$namespace/explorer/service/$'
    | '/n/$namespace/explorer/tree/$'
    | '/n/$namespace/gateway/routes/$filename'
    | '/n/$namespace/mirror/logs/$id'
    | '/n/$namespace/gateway/routes'
    | '/n/$namespace/explorer/workflow/edit/$'
    | '/n/$namespace/explorer/workflow/overview/$'
    | '/n/$namespace/explorer/workflow/services/$'
    | '/n/$namespace/explorer/workflow/settings/$'
  id:
    | '__root__'
    | '/'
    | '/n/$namespace'
    | '/n/$namespace/events'
    | '/n/$namespace/explorer'
    | '/n/$namespace/jq'
    | '/n/$namespace/monitoring'
    | '/n/$namespace/settings'
    | '/n/$namespace/events/history'
    | '/n/$namespace/events/listeners'
    | '/n/$namespace/gateway/consumers'
    | '/n/$namespace/instances/$id'
    | '/n/$namespace/instances'
    | '/n/$namespace/instances/_layout'
    | '/n/$namespace/mirror'
    | '/n/$namespace/mirror/_layout'
    | '/n/$namespace/services/$service'
    | '/n/$namespace/services'
    | '/n/$namespace/services/_layout'
    | '/n/$namespace/explorer/'
    | '/n/$namespace/gateway/'
    | '/n/$namespace/instances/'
    | '/n/$namespace/mirror/'
    | '/n/$namespace/services/'
    | '/n/$namespace/explorer/consumer/$'
    | '/n/$namespace/explorer/endpoint/$'
    | '/n/$namespace/explorer/service/$'
    | '/n/$namespace/explorer/tree/$'
    | '/n/$namespace/gateway/routes/$filename'
    | '/n/$namespace/mirror/logs/$id'
    | '/n/$namespace/gateway/routes/'
    | '/n/$namespace/explorer/workflow/edit/$'
    | '/n/$namespace/explorer/workflow/overview/$'
    | '/n/$namespace/explorer/workflow/services/$'
    | '/n/$namespace/explorer/workflow/settings/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NNamespaceRouteRoute: typeof NNamespaceRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NNamespaceRouteRoute: NNamespaceRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/n/$namespace"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/n/$namespace": {
      "filePath": "n/$namespace/route.tsx",
      "children": [
        "/n/$namespace/events",
        "/n/$namespace/explorer",
        "/n/$namespace/jq",
        "/n/$namespace/monitoring",
        "/n/$namespace/settings",
        "/n/$namespace/gateway/consumers",
        "/n/$namespace/instances/$id",
        "/n/$namespace/instances",
        "/n/$namespace/mirror",
        "/n/$namespace/services/$service",
        "/n/$namespace/services",
        "/n/$namespace/gateway/",
        "/n/$namespace/gateway/routes/$filename",
        "/n/$namespace/gateway/routes/"
      ]
    },
    "/n/$namespace/events": {
      "filePath": "n/$namespace/events/route.tsx",
      "parent": "/n/$namespace",
      "children": [
        "/n/$namespace/events/history",
        "/n/$namespace/events/listeners"
      ]
    },
    "/n/$namespace/explorer": {
      "filePath": "n/$namespace/explorer/route.tsx",
      "parent": "/n/$namespace",
      "children": [
        "/n/$namespace/explorer/",
        "/n/$namespace/explorer/consumer/$",
        "/n/$namespace/explorer/endpoint/$",
        "/n/$namespace/explorer/service/$",
        "/n/$namespace/explorer/tree/$",
        "/n/$namespace/explorer/workflow/edit/$",
        "/n/$namespace/explorer/workflow/overview/$",
        "/n/$namespace/explorer/workflow/services/$",
        "/n/$namespace/explorer/workflow/settings/$"
      ]
    },
    "/n/$namespace/jq": {
      "filePath": "n/$namespace/jq.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/monitoring": {
      "filePath": "n/$namespace/monitoring.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/settings": {
      "filePath": "n/$namespace/settings.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/events/history": {
      "filePath": "n/$namespace/events/history.tsx",
      "parent": "/n/$namespace/events"
    },
    "/n/$namespace/events/listeners": {
      "filePath": "n/$namespace/events/listeners.tsx",
      "parent": "/n/$namespace/events"
    },
    "/n/$namespace/gateway/consumers": {
      "filePath": "n/$namespace/gateway/consumers.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/instances/$id": {
      "filePath": "n/$namespace/instances/$id.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/instances": {
      "filePath": "n/$namespace/instances",
      "parent": "/n/$namespace",
      "children": [
        "/n/$namespace/instances/_layout",
        "/n/$namespace/instances/"
      ]
    },
    "/n/$namespace/instances/_layout": {
      "filePath": "n/$namespace/instances/_layout.tsx",
      "parent": "/n/$namespace/instances"
    },
    "/n/$namespace/mirror": {
      "filePath": "n/$namespace/mirror",
      "parent": "/n/$namespace",
      "children": [
        "/n/$namespace/mirror/_layout",
        "/n/$namespace/mirror/",
        "/n/$namespace/mirror/logs/$id"
      ]
    },
    "/n/$namespace/mirror/_layout": {
      "filePath": "n/$namespace/mirror/_layout.tsx",
      "parent": "/n/$namespace/mirror"
    },
    "/n/$namespace/services/$service": {
      "filePath": "n/$namespace/services/$service.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/services": {
      "filePath": "n/$namespace/services",
      "parent": "/n/$namespace",
      "children": [
        "/n/$namespace/services/_layout",
        "/n/$namespace/services/"
      ]
    },
    "/n/$namespace/services/_layout": {
      "filePath": "n/$namespace/services/_layout.tsx",
      "parent": "/n/$namespace/services"
    },
    "/n/$namespace/explorer/": {
      "filePath": "n/$namespace/explorer/index.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/gateway/": {
      "filePath": "n/$namespace/gateway/index.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/instances/": {
      "filePath": "n/$namespace/instances/index.tsx",
      "parent": "/n/$namespace/instances"
    },
    "/n/$namespace/mirror/": {
      "filePath": "n/$namespace/mirror/index.tsx",
      "parent": "/n/$namespace/mirror"
    },
    "/n/$namespace/services/": {
      "filePath": "n/$namespace/services/index.tsx",
      "parent": "/n/$namespace/services"
    },
    "/n/$namespace/explorer/consumer/$": {
      "filePath": "n/$namespace/explorer/consumer.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/explorer/endpoint/$": {
      "filePath": "n/$namespace/explorer/endpoint.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/explorer/service/$": {
      "filePath": "n/$namespace/explorer/service.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/explorer/tree/$": {
      "filePath": "n/$namespace/explorer/tree.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/gateway/routes/$filename": {
      "filePath": "n/$namespace/gateway/routes/$filename.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/mirror/logs/$id": {
      "filePath": "n/$namespace/mirror/logs.$id.tsx",
      "parent": "/n/$namespace/mirror"
    },
    "/n/$namespace/gateway/routes/": {
      "filePath": "n/$namespace/gateway/routes/index.tsx",
      "parent": "/n/$namespace"
    },
    "/n/$namespace/explorer/workflow/edit/$": {
      "filePath": "n/$namespace/explorer/workflow/edit.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/explorer/workflow/overview/$": {
      "filePath": "n/$namespace/explorer/workflow/overview.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/explorer/workflow/services/$": {
      "filePath": "n/$namespace/explorer/workflow/services.$.tsx",
      "parent": "/n/$namespace/explorer"
    },
    "/n/$namespace/explorer/workflow/settings/$": {
      "filePath": "n/$namespace/explorer/workflow/settings.$.tsx",
      "parent": "/n/$namespace/explorer"
    }
  }
}
ROUTE_MANIFEST_END */
