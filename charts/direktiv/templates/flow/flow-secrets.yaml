apiVersion: v1
kind: Secret
metadata:
  name: {{ include "direktiv.fullname" . }}
  labels:
    {{- include "direktiv.labels" . | nindent 4 }}
type: Opaque
data:

   {{- $secretName := "direktiv.fullname" -}}
   {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
   {{- $secretData := (get $secretObj "data") | default dict }}

   db: {{ printf "host=%s port=%d user=%s dbname=%s password=%s sslmode=%s %s" .Values.database.host ( .Values.database.port | int64 )  .Values.database.user .Values.database.name .Values.database.password .Values.database.sslmode .Values.database.additional | b64enc | quote }}

   {{- if .Values.flow.encryptionKey }}
   key: {{ .Values.flow.encryptionKey | b64enc | quote }}
   {{- else }}
   {{- $secret := (get $secretData "jwt-secret") | default (randAlphaNum 32 | b64enc) }}
   key: {{ $secret | quote }}
   {{- end }}

   {{- if ne .Values.apikey "none" }}
   apikey: {{ .Values.apikey | b64enc | quote }}
   {{- end }}