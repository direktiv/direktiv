#Mac desktop files
.DS_Store

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
.vscode

# certs for linkerd 
ca.*
issuer.*

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

/deps
/build/*-binary
/build/*.md5
/build/*.checksum
/build/flow
/build/api
/build/sidecar
/build/init-pod
/build/apiserver
/build/direktiv
/build/direkcli
/build/flow-dbinit
/build/direkcli-linux
/build/secrets
/build/functions
/build/alpine-*
/build/isolates
/apiserver
/direktiv
/direkcli*
/ui-server
/postgres
/minio
/direktiv-ui
/secrets
/api
/direktiv-apps
/binaries

/build/docker/*
!*build/docker/flow-dbinit
!*build/docker/all
!*build/docker/direktiv
/build/docker/sidecar/sidecar
*build/docker/functions/functions
build/docker/all/kubernetes
build/docker/all/*.tar
build/docker/all/*.tar.gz
deploy*.yaml

kubernetes/charts/knative/charts
kubernetes/charts/knative/Chart.lock

kubernetes/charts/direktiv/charts
kubernetes/charts/direktiv/Chart.lock
kubernetes/charts/direktiv/tmpcharts

scripts/api/swagger_in.json
scripts/devcerts
scripts/direktiv-charts
scripts/registry/share/out

scripts/wip/kong/proto

logs.log
build/docker/all/k3s

ca.crt
ca.key
cmd/exec/.direktiv.yaml
cmd/exec/greeting.json
cmd/exec/test.json
cmd/exec/test.yaml
greeting.json
issuer.crt
issuer.key
scripts/dev.yaml

scripts/api/api.md
scripts/api/swagger.json
.idea


direktivctl-darwin
direktivctl-darwin-arm64
direktivctl-windows
direktivctl

*node_modules

.draft

openapi/node_modules
openapi/output

direktiv.yaml# Logs
#logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

app.tar
app/

!src/components/logs

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# IDE setting
.idea

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build
/dist

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

reactjs-embed

.yalc
yalc.lock

storybook-static
/test-results/
/playwright-report/
/playwright/.cache/

.vscode/*
!.vsco