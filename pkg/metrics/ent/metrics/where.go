// Code generated by ent, DO NOT EDIT.

package metrics

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/direktiv/direktiv/pkg/metrics/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldID, id))
}

// Namespace applies equality check predicate on the "namespace" field. It's identical to NamespaceEQ.
func Namespace(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldNamespace, v))
}

// Workflow applies equality check predicate on the "workflow" field. It's identical to WorkflowEQ.
func Workflow(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldWorkflow, v))
}

// Revision applies equality check predicate on the "revision" field. It's identical to RevisionEQ.
func Revision(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldRevision, v))
}

// Instance applies equality check predicate on the "instance" field. It's identical to InstanceEQ.
func Instance(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldInstance, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldState, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldTimestamp, v))
}

// WorkflowMs applies equality check predicate on the "workflow_ms" field. It's identical to WorkflowMsEQ.
func WorkflowMs(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldWorkflowMs, v))
}

// IsolateMs applies equality check predicate on the "isolate_ms" field. It's identical to IsolateMsEQ.
func IsolateMs(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldIsolateMs, v))
}

// ErrorCode applies equality check predicate on the "error_code" field. It's identical to ErrorCodeEQ.
func ErrorCode(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldErrorCode, v))
}

// Invoker applies equality check predicate on the "invoker" field. It's identical to InvokerEQ.
func Invoker(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldInvoker, v))
}

// Next applies equality check predicate on the "next" field. It's identical to NextEQ.
func Next(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldNext, v))
}

// Transition applies equality check predicate on the "transition" field. It's identical to TransitionEQ.
func Transition(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldTransition, v))
}

// NamespaceEQ applies the EQ predicate on the "namespace" field.
func NamespaceEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldNamespace, v))
}

// NamespaceNEQ applies the NEQ predicate on the "namespace" field.
func NamespaceNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldNamespace, v))
}

// NamespaceIn applies the In predicate on the "namespace" field.
func NamespaceIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldNamespace, vs...))
}

// NamespaceNotIn applies the NotIn predicate on the "namespace" field.
func NamespaceNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldNamespace, vs...))
}

// NamespaceGT applies the GT predicate on the "namespace" field.
func NamespaceGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldNamespace, v))
}

// NamespaceGTE applies the GTE predicate on the "namespace" field.
func NamespaceGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldNamespace, v))
}

// NamespaceLT applies the LT predicate on the "namespace" field.
func NamespaceLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldNamespace, v))
}

// NamespaceLTE applies the LTE predicate on the "namespace" field.
func NamespaceLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldNamespace, v))
}

// NamespaceContains applies the Contains predicate on the "namespace" field.
func NamespaceContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldNamespace, v))
}

// NamespaceHasPrefix applies the HasPrefix predicate on the "namespace" field.
func NamespaceHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldNamespace, v))
}

// NamespaceHasSuffix applies the HasSuffix predicate on the "namespace" field.
func NamespaceHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldNamespace, v))
}

// NamespaceEqualFold applies the EqualFold predicate on the "namespace" field.
func NamespaceEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldNamespace, v))
}

// NamespaceContainsFold applies the ContainsFold predicate on the "namespace" field.
func NamespaceContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldNamespace, v))
}

// WorkflowEQ applies the EQ predicate on the "workflow" field.
func WorkflowEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldWorkflow, v))
}

// WorkflowNEQ applies the NEQ predicate on the "workflow" field.
func WorkflowNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldWorkflow, v))
}

// WorkflowIn applies the In predicate on the "workflow" field.
func WorkflowIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldWorkflow, vs...))
}

// WorkflowNotIn applies the NotIn predicate on the "workflow" field.
func WorkflowNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldWorkflow, vs...))
}

// WorkflowGT applies the GT predicate on the "workflow" field.
func WorkflowGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldWorkflow, v))
}

// WorkflowGTE applies the GTE predicate on the "workflow" field.
func WorkflowGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldWorkflow, v))
}

// WorkflowLT applies the LT predicate on the "workflow" field.
func WorkflowLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldWorkflow, v))
}

// WorkflowLTE applies the LTE predicate on the "workflow" field.
func WorkflowLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldWorkflow, v))
}

// WorkflowContains applies the Contains predicate on the "workflow" field.
func WorkflowContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldWorkflow, v))
}

// WorkflowHasPrefix applies the HasPrefix predicate on the "workflow" field.
func WorkflowHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldWorkflow, v))
}

// WorkflowHasSuffix applies the HasSuffix predicate on the "workflow" field.
func WorkflowHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldWorkflow, v))
}

// WorkflowEqualFold applies the EqualFold predicate on the "workflow" field.
func WorkflowEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldWorkflow, v))
}

// WorkflowContainsFold applies the ContainsFold predicate on the "workflow" field.
func WorkflowContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldWorkflow, v))
}

// RevisionEQ applies the EQ predicate on the "revision" field.
func RevisionEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldRevision, v))
}

// RevisionNEQ applies the NEQ predicate on the "revision" field.
func RevisionNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldRevision, v))
}

// RevisionIn applies the In predicate on the "revision" field.
func RevisionIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldRevision, vs...))
}

// RevisionNotIn applies the NotIn predicate on the "revision" field.
func RevisionNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldRevision, vs...))
}

// RevisionGT applies the GT predicate on the "revision" field.
func RevisionGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldRevision, v))
}

// RevisionGTE applies the GTE predicate on the "revision" field.
func RevisionGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldRevision, v))
}

// RevisionLT applies the LT predicate on the "revision" field.
func RevisionLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldRevision, v))
}

// RevisionLTE applies the LTE predicate on the "revision" field.
func RevisionLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldRevision, v))
}

// RevisionContains applies the Contains predicate on the "revision" field.
func RevisionContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldRevision, v))
}

// RevisionHasPrefix applies the HasPrefix predicate on the "revision" field.
func RevisionHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldRevision, v))
}

// RevisionHasSuffix applies the HasSuffix predicate on the "revision" field.
func RevisionHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldRevision, v))
}

// RevisionEqualFold applies the EqualFold predicate on the "revision" field.
func RevisionEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldRevision, v))
}

// RevisionContainsFold applies the ContainsFold predicate on the "revision" field.
func RevisionContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldRevision, v))
}

// InstanceEQ applies the EQ predicate on the "instance" field.
func InstanceEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldInstance, v))
}

// InstanceNEQ applies the NEQ predicate on the "instance" field.
func InstanceNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldInstance, v))
}

// InstanceIn applies the In predicate on the "instance" field.
func InstanceIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldInstance, vs...))
}

// InstanceNotIn applies the NotIn predicate on the "instance" field.
func InstanceNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldInstance, vs...))
}

// InstanceGT applies the GT predicate on the "instance" field.
func InstanceGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldInstance, v))
}

// InstanceGTE applies the GTE predicate on the "instance" field.
func InstanceGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldInstance, v))
}

// InstanceLT applies the LT predicate on the "instance" field.
func InstanceLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldInstance, v))
}

// InstanceLTE applies the LTE predicate on the "instance" field.
func InstanceLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldInstance, v))
}

// InstanceContains applies the Contains predicate on the "instance" field.
func InstanceContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldInstance, v))
}

// InstanceHasPrefix applies the HasPrefix predicate on the "instance" field.
func InstanceHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldInstance, v))
}

// InstanceHasSuffix applies the HasSuffix predicate on the "instance" field.
func InstanceHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldInstance, v))
}

// InstanceEqualFold applies the EqualFold predicate on the "instance" field.
func InstanceEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldInstance, v))
}

// InstanceContainsFold applies the ContainsFold predicate on the "instance" field.
func InstanceContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldInstance, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldState, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldTimestamp, v))
}

// WorkflowMsEQ applies the EQ predicate on the "workflow_ms" field.
func WorkflowMsEQ(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldWorkflowMs, v))
}

// WorkflowMsNEQ applies the NEQ predicate on the "workflow_ms" field.
func WorkflowMsNEQ(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldWorkflowMs, v))
}

// WorkflowMsIn applies the In predicate on the "workflow_ms" field.
func WorkflowMsIn(vs ...int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldWorkflowMs, vs...))
}

// WorkflowMsNotIn applies the NotIn predicate on the "workflow_ms" field.
func WorkflowMsNotIn(vs ...int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldWorkflowMs, vs...))
}

// WorkflowMsGT applies the GT predicate on the "workflow_ms" field.
func WorkflowMsGT(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldWorkflowMs, v))
}

// WorkflowMsGTE applies the GTE predicate on the "workflow_ms" field.
func WorkflowMsGTE(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldWorkflowMs, v))
}

// WorkflowMsLT applies the LT predicate on the "workflow_ms" field.
func WorkflowMsLT(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldWorkflowMs, v))
}

// WorkflowMsLTE applies the LTE predicate on the "workflow_ms" field.
func WorkflowMsLTE(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldWorkflowMs, v))
}

// IsolateMsEQ applies the EQ predicate on the "isolate_ms" field.
func IsolateMsEQ(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldIsolateMs, v))
}

// IsolateMsNEQ applies the NEQ predicate on the "isolate_ms" field.
func IsolateMsNEQ(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldIsolateMs, v))
}

// IsolateMsIn applies the In predicate on the "isolate_ms" field.
func IsolateMsIn(vs ...int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldIsolateMs, vs...))
}

// IsolateMsNotIn applies the NotIn predicate on the "isolate_ms" field.
func IsolateMsNotIn(vs ...int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldIsolateMs, vs...))
}

// IsolateMsGT applies the GT predicate on the "isolate_ms" field.
func IsolateMsGT(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldIsolateMs, v))
}

// IsolateMsGTE applies the GTE predicate on the "isolate_ms" field.
func IsolateMsGTE(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldIsolateMs, v))
}

// IsolateMsLT applies the LT predicate on the "isolate_ms" field.
func IsolateMsLT(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldIsolateMs, v))
}

// IsolateMsLTE applies the LTE predicate on the "isolate_ms" field.
func IsolateMsLTE(v int64) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldIsolateMs, v))
}

// ErrorCodeEQ applies the EQ predicate on the "error_code" field.
func ErrorCodeEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldErrorCode, v))
}

// ErrorCodeNEQ applies the NEQ predicate on the "error_code" field.
func ErrorCodeNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldErrorCode, v))
}

// ErrorCodeIn applies the In predicate on the "error_code" field.
func ErrorCodeIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldErrorCode, vs...))
}

// ErrorCodeNotIn applies the NotIn predicate on the "error_code" field.
func ErrorCodeNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldErrorCode, vs...))
}

// ErrorCodeGT applies the GT predicate on the "error_code" field.
func ErrorCodeGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldErrorCode, v))
}

// ErrorCodeGTE applies the GTE predicate on the "error_code" field.
func ErrorCodeGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldErrorCode, v))
}

// ErrorCodeLT applies the LT predicate on the "error_code" field.
func ErrorCodeLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldErrorCode, v))
}

// ErrorCodeLTE applies the LTE predicate on the "error_code" field.
func ErrorCodeLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldErrorCode, v))
}

// ErrorCodeContains applies the Contains predicate on the "error_code" field.
func ErrorCodeContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldErrorCode, v))
}

// ErrorCodeHasPrefix applies the HasPrefix predicate on the "error_code" field.
func ErrorCodeHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldErrorCode, v))
}

// ErrorCodeHasSuffix applies the HasSuffix predicate on the "error_code" field.
func ErrorCodeHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldErrorCode, v))
}

// ErrorCodeIsNil applies the IsNil predicate on the "error_code" field.
func ErrorCodeIsNil() predicate.Metrics {
	return predicate.Metrics(sql.FieldIsNull(FieldErrorCode))
}

// ErrorCodeNotNil applies the NotNil predicate on the "error_code" field.
func ErrorCodeNotNil() predicate.Metrics {
	return predicate.Metrics(sql.FieldNotNull(FieldErrorCode))
}

// ErrorCodeEqualFold applies the EqualFold predicate on the "error_code" field.
func ErrorCodeEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldErrorCode, v))
}

// ErrorCodeContainsFold applies the ContainsFold predicate on the "error_code" field.
func ErrorCodeContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldErrorCode, v))
}

// InvokerEQ applies the EQ predicate on the "invoker" field.
func InvokerEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldInvoker, v))
}

// InvokerNEQ applies the NEQ predicate on the "invoker" field.
func InvokerNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldInvoker, v))
}

// InvokerIn applies the In predicate on the "invoker" field.
func InvokerIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldInvoker, vs...))
}

// InvokerNotIn applies the NotIn predicate on the "invoker" field.
func InvokerNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldInvoker, vs...))
}

// InvokerGT applies the GT predicate on the "invoker" field.
func InvokerGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldInvoker, v))
}

// InvokerGTE applies the GTE predicate on the "invoker" field.
func InvokerGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldInvoker, v))
}

// InvokerLT applies the LT predicate on the "invoker" field.
func InvokerLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldInvoker, v))
}

// InvokerLTE applies the LTE predicate on the "invoker" field.
func InvokerLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldInvoker, v))
}

// InvokerContains applies the Contains predicate on the "invoker" field.
func InvokerContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldInvoker, v))
}

// InvokerHasPrefix applies the HasPrefix predicate on the "invoker" field.
func InvokerHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldInvoker, v))
}

// InvokerHasSuffix applies the HasSuffix predicate on the "invoker" field.
func InvokerHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldInvoker, v))
}

// InvokerEqualFold applies the EqualFold predicate on the "invoker" field.
func InvokerEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldInvoker, v))
}

// InvokerContainsFold applies the ContainsFold predicate on the "invoker" field.
func InvokerContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldInvoker, v))
}

// NextEQ applies the EQ predicate on the "next" field.
func NextEQ(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldNext, v))
}

// NextNEQ applies the NEQ predicate on the "next" field.
func NextNEQ(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldNext, v))
}

// NextIn applies the In predicate on the "next" field.
func NextIn(vs ...int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldNext, vs...))
}

// NextNotIn applies the NotIn predicate on the "next" field.
func NextNotIn(vs ...int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldNext, vs...))
}

// NextGT applies the GT predicate on the "next" field.
func NextGT(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldNext, v))
}

// NextGTE applies the GTE predicate on the "next" field.
func NextGTE(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldNext, v))
}

// NextLT applies the LT predicate on the "next" field.
func NextLT(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldNext, v))
}

// NextLTE applies the LTE predicate on the "next" field.
func NextLTE(v int8) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldNext, v))
}

// TransitionEQ applies the EQ predicate on the "transition" field.
func TransitionEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEQ(FieldTransition, v))
}

// TransitionNEQ applies the NEQ predicate on the "transition" field.
func TransitionNEQ(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNEQ(FieldTransition, v))
}

// TransitionIn applies the In predicate on the "transition" field.
func TransitionIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldIn(FieldTransition, vs...))
}

// TransitionNotIn applies the NotIn predicate on the "transition" field.
func TransitionNotIn(vs ...string) predicate.Metrics {
	return predicate.Metrics(sql.FieldNotIn(FieldTransition, vs...))
}

// TransitionGT applies the GT predicate on the "transition" field.
func TransitionGT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGT(FieldTransition, v))
}

// TransitionGTE applies the GTE predicate on the "transition" field.
func TransitionGTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldGTE(FieldTransition, v))
}

// TransitionLT applies the LT predicate on the "transition" field.
func TransitionLT(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLT(FieldTransition, v))
}

// TransitionLTE applies the LTE predicate on the "transition" field.
func TransitionLTE(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldLTE(FieldTransition, v))
}

// TransitionContains applies the Contains predicate on the "transition" field.
func TransitionContains(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContains(FieldTransition, v))
}

// TransitionHasPrefix applies the HasPrefix predicate on the "transition" field.
func TransitionHasPrefix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasPrefix(FieldTransition, v))
}

// TransitionHasSuffix applies the HasSuffix predicate on the "transition" field.
func TransitionHasSuffix(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldHasSuffix(FieldTransition, v))
}

// TransitionIsNil applies the IsNil predicate on the "transition" field.
func TransitionIsNil() predicate.Metrics {
	return predicate.Metrics(sql.FieldIsNull(FieldTransition))
}

// TransitionNotNil applies the NotNil predicate on the "transition" field.
func TransitionNotNil() predicate.Metrics {
	return predicate.Metrics(sql.FieldNotNull(FieldTransition))
}

// TransitionEqualFold applies the EqualFold predicate on the "transition" field.
func TransitionEqualFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldEqualFold(FieldTransition, v))
}

// TransitionContainsFold applies the ContainsFold predicate on the "transition" field.
func TransitionContainsFold(v string) predicate.Metrics {
	return predicate.Metrics(sql.FieldContainsFold(FieldTransition, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Metrics) predicate.Metrics {
	return predicate.Metrics(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Metrics) predicate.Metrics {
	return predicate.Metrics(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Metrics) predicate.Metrics {
	return predicate.Metrics(func(s *sql.Selector) {
		p(s.Not())
	})
}
