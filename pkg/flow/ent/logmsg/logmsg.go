// Code generated by ent, DO NOT EDIT.

package logmsg

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the logmsg type in the database.
	Label = "log_msg"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldT holds the string denoting the t field in the database.
	FieldT = "t"
	// FieldMsg holds the string denoting the msg field in the database.
	FieldMsg = "msg"
	// FieldRootInstanceId holds the string denoting the rootinstanceid field in the database.
	FieldRootInstanceId = "root_instance_id"
	// FieldLogInstanceCallPath holds the string denoting the loginstancecallpath field in the database.
	FieldLogInstanceCallPath = "log_instance_call_path"
	// EdgeNamespace holds the string denoting the namespace edge name in mutations.
	EdgeNamespace = "namespace"
	// EdgeWorkflow holds the string denoting the workflow edge name in mutations.
	EdgeWorkflow = "workflow"
	// EdgeInstance holds the string denoting the instance edge name in mutations.
	EdgeInstance = "instance"
	// EdgeActivity holds the string denoting the activity edge name in mutations.
	EdgeActivity = "activity"
	// Table holds the table name of the logmsg in the database.
	Table = "log_msgs"
	// NamespaceTable is the table that holds the namespace relation/edge.
	NamespaceTable = "log_msgs"
	// NamespaceInverseTable is the table name for the Namespace entity.
	// It exists in this package in order to avoid circular dependency with the "namespace" package.
	NamespaceInverseTable = "namespaces"
	// NamespaceColumn is the table column denoting the namespace relation/edge.
	NamespaceColumn = "namespace_logs"
	// WorkflowTable is the table that holds the workflow relation/edge.
	WorkflowTable = "log_msgs"
	// WorkflowInverseTable is the table name for the Workflow entity.
	// It exists in this package in order to avoid circular dependency with the "workflow" package.
	WorkflowInverseTable = "workflows"
	// WorkflowColumn is the table column denoting the workflow relation/edge.
	WorkflowColumn = "workflow_logs"
	// InstanceTable is the table that holds the instance relation/edge.
	InstanceTable = "log_msgs"
	// InstanceInverseTable is the table name for the Instance entity.
	// It exists in this package in order to avoid circular dependency with the "instance" package.
	InstanceInverseTable = "instances"
	// InstanceColumn is the table column denoting the instance relation/edge.
	InstanceColumn = "instance_logs"
	// ActivityTable is the table that holds the activity relation/edge.
	ActivityTable = "log_msgs"
	// ActivityInverseTable is the table name for the MirrorActivity entity.
	// It exists in this package in order to avoid circular dependency with the "mirroractivity" package.
	ActivityInverseTable = "mirror_activities"
	// ActivityColumn is the table column denoting the activity relation/edge.
	ActivityColumn = "mirror_activity_logs"
)

// Columns holds all SQL columns for logmsg fields.
var Columns = []string{
	FieldID,
	FieldT,
	FieldMsg,
	FieldRootInstanceId,
	FieldLogInstanceCallPath,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "log_msgs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"instance_logs",
	"mirror_activity_logs",
	"namespace_logs",
	"workflow_logs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultRootInstanceId holds the default value on creation for the "rootInstanceId" field.
	DefaultRootInstanceId string
	// DefaultLogInstanceCallPath holds the default value on creation for the "logInstanceCallPath" field.
	DefaultLogInstanceCallPath string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
