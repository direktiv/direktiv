// Code generated by ent, DO NOT EDIT.

package route

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the route type in the database.
	Label = "route"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldWeight holds the string denoting the weight field in the database.
	FieldWeight = "weight"
	// EdgeWorkflow holds the string denoting the workflow edge name in mutations.
	EdgeWorkflow = "workflow"
	// EdgeRef holds the string denoting the ref edge name in mutations.
	EdgeRef = "ref"
	// Table holds the table name of the route in the database.
	Table = "routes"
	// WorkflowTable is the table that holds the workflow relation/edge.
	WorkflowTable = "routes"
	// WorkflowInverseTable is the table name for the Workflow entity.
	// It exists in this package in order to avoid circular dependency with the "workflow" package.
	WorkflowInverseTable = "workflows"
	// WorkflowColumn is the table column denoting the workflow relation/edge.
	WorkflowColumn = "workflow_routes"
	// RefTable is the table that holds the ref relation/edge.
	RefTable = "routes"
	// RefInverseTable is the table name for the Ref entity.
	// It exists in this package in order to avoid circular dependency with the "ref" package.
	RefInverseTable = "refs"
	// RefColumn is the table column denoting the ref relation/edge.
	RefColumn = "ref_routes"
)

// Columns holds all SQL columns for route fields.
var Columns = []string{
	FieldID,
	FieldWeight,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "routes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"ref_routes",
	"workflow_routes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
