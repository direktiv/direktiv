// Code generated by ent, DO NOT EDIT.

package events

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the events type in the database.
	Label = "events"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldEvents holds the string denoting the events field in the database.
	FieldEvents = "events"
	// FieldCorrelations holds the string denoting the correlations field in the database.
	FieldCorrelations = "correlations"
	// FieldSignature holds the string denoting the signature field in the database.
	FieldSignature = "signature"
	// FieldCount holds the string denoting the count field in the database.
	FieldCount = "count"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldWorkflowID holds the string denoting the workflow_id field in the database.
	FieldWorkflowID = "workflow_id"
	// EdgeWfeventswait holds the string denoting the wfeventswait edge name in mutations.
	EdgeWfeventswait = "wfeventswait"
	// EdgeInstance holds the string denoting the instance edge name in mutations.
	EdgeInstance = "instance"
	// EdgeNamespace holds the string denoting the namespace edge name in mutations.
	EdgeNamespace = "namespace"
	// Table holds the table name of the events in the database.
	Table = "events"
	// WfeventswaitTable is the table that holds the wfeventswait relation/edge.
	WfeventswaitTable = "events_waits"
	// WfeventswaitInverseTable is the table name for the EventsWait entity.
	// It exists in this package in order to avoid circular dependency with the "eventswait" package.
	WfeventswaitInverseTable = "events_waits"
	// WfeventswaitColumn is the table column denoting the wfeventswait relation/edge.
	WfeventswaitColumn = "events_wfeventswait"
	// InstanceTable is the table that holds the instance relation/edge.
	InstanceTable = "events"
	// InstanceInverseTable is the table name for the Instance entity.
	// It exists in this package in order to avoid circular dependency with the "instance" package.
	InstanceInverseTable = "instances"
	// InstanceColumn is the table column denoting the instance relation/edge.
	InstanceColumn = "instance_eventlisteners"
	// NamespaceTable is the table that holds the namespace relation/edge.
	NamespaceTable = "events"
	// NamespaceInverseTable is the table name for the Namespace entity.
	// It exists in this package in order to avoid circular dependency with the "namespace" package.
	NamespaceInverseTable = "namespaces"
	// NamespaceColumn is the table column denoting the namespace relation/edge.
	NamespaceColumn = "namespace_namespacelisteners"
)

// Columns holds all SQL columns for events fields.
var Columns = []string{
	FieldID,
	FieldEvents,
	FieldCorrelations,
	FieldSignature,
	FieldCount,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldWorkflowID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "events"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"instance_eventlisteners",
	"namespace_namespacelisteners",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
