syntax = "proto3";

package grpc;

option go_package = "github.com/vorteil/direktiv/pkg/flow/grpc";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

import "pkg/flow/grpc/namespaces.proto";
import "pkg/flow/grpc/logs.proto";
import "pkg/flow/grpc/nodes.proto";
import "pkg/flow/grpc/workflows.proto";
import "pkg/flow/grpc/variables.proto";
import "pkg/flow/grpc/secrets.proto";
import "pkg/flow/grpc/instances.proto";
import "pkg/flow/grpc/internal.proto";
import "pkg/flow/grpc/cloudevent.proto";
import "pkg/flow/grpc/util.proto";

service Flow {
	rpc Namespace (NamespaceRequest) returns (NamespaceResponse) {
	}
	rpc Namespaces (NamespacesRequest) returns (NamespacesResponse) {
		option (google.api.http) = {
			get: "/api/namespaces"
		};
	}
	rpc NamespacesStream (NamespacesRequest) returns (stream NamespacesResponse) {
		option (google.api.http) = {
			get: "/api/stream/namespaces"
		};
	}
	rpc CreateNamespace (CreateNamespaceRequest) returns (CreateNamespaceResponse) {
		option (google.api.http) = {
			post: "/api/namespaces/{name}"
		};
	}
	rpc DeleteNamespace (DeleteNamespaceRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/api/namespaces/{name}"
		};
	}
	rpc RenameNamespace (RenameNamespaceRequest) returns (RenameNamespaceResponse) {
		option (google.api.http) = {
			patch: "/api/namespaces/{name}"
			body: "*"
		};
	}
	rpc ServerLogs (ServerLogsRequest) returns (ServerLogsResponse) {}
	rpc ServerLogsParcels (ServerLogsRequest) returns (stream ServerLogsResponse) {}
	rpc NamespaceLogs (NamespaceLogsRequest) returns (NamespaceLogsResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/logs"
		};
	}
	rpc NamespaceLogsParcels (NamespaceLogsRequest) returns (stream NamespaceLogsResponse) {}
	rpc WorkflowLogs (WorkflowLogsRequest) returns (WorkflowLogsResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/workflows/{path=**}/logs"
			additional_bindings {
				get: "/api/namespaces/{namespace}/workflows/{path}/logs"
				body: "*"
			}
		};
	}
	rpc WorkflowLogsParcels (WorkflowLogsRequest) returns (stream WorkflowLogsResponse) {}
	rpc Directory (DirectoryRequest) returns (DirectoryResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/directory/{path=**}"
			additional_bindings {
				get: "/api/namespaces/{namespace}/directory/{path}"
			}
			additional_bindings {
				get: "/api/namespaces/{namespace}/directory/"
			}
		};
	}
	rpc DirectoryStream (DirectoryRequest) returns (stream DirectoryResponse) {}
	rpc CreateDirectory (CreateDirectoryRequest) returns (CreateDirectoryResponse) {
		option (google.api.http) = {
			post: "/api/namespaces/{namespace}/directory/{path=**}"
			additional_bindings {
				post: "/api/namespaces/{namespace}/directory/{path}"
			}
		};
	}
	rpc DeleteNode (DeleteNodeRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/api/namespaces/{namespace}/node/{path=**}"
			additional_bindings {
				delete: "/api/namespaces/{namespace}/node/{path}"
			}
		};
	}
	rpc RenameNode (RenameNodeRequest) returns (RenameNodeResponse) {
		option (google.api.http) = {
			patch: "/api/namespaces/{namespace}/node/{old=**}"
			body: "*"
		};
	}
	rpc Node (NodeRequest) returns (NodeResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/node/{path=**}"
			body: "*"
			additional_bindings {
				get: "/api/namespaces/{namespace}/node/{path}"
				body: "*"
			}
			additional_bindings {
				get: "/api/namespaces/{namespace}/node/"
				body: "*"
			}
		};
	}
	rpc Workflow (WorkflowRequest) returns (WorkflowResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/workflow/{path=**}"
			body: "*"
			additional_bindings {
				get: "/api/namespaces/{namespace}/workflow/{path}"
				body: "*"
			}
		};
	}
	rpc WorkflowStream (WorkflowRequest) returns (stream WorkflowResponse) {}
	rpc CreateWorkflow (CreateWorkflowRequest) returns (CreateWorkflowResponse) {
		option (google.api.http) = {
			post: "/api/namespaces/{namespace}/workflow/{path=**}"
			body: "*"
			additional_bindings {
				post: "/api/namespaces/{namespace}/workflow/{path}"
				body: "*"
			}
		};
	}
	rpc UpdateWorkflow (UpdateWorkflowRequest) returns (UpdateWorkflowResponse) {
		option (google.api.http) = {
			put: "/api/namespaces/{namespace}/workflow/{path=**}"
			body: "*"
		};
	}
	rpc SaveHead (SaveHeadRequest) returns (SaveHeadResponse) {
		option (google.api.http) = {
			patch: "/api/namespaces/{namespace}/workflow/{path=**}/head"
		};
	}
	rpc DiscardHead (DiscardHeadRequest) returns (DiscardHeadResponse) {
		option (google.api.http) = {
			delete: "/api/namespaces/{namespace}/workflow/{path=**}/head"
		};
	}
	rpc Tags (TagsRequest) returns (TagsResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/workflow/{path=**}/tags"
			body: "*"
		};
	}
	rpc TagsStream (TagsRequest) returns (stream TagsResponse) {}
	rpc Refs (RefsRequest) returns (RefsResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/workflow/{path=**}/refs"
			body: "*"
		};
	}
	rpc RefsStream (RefsRequest) returns (stream RefsResponse) {}
	rpc Revisions (RevisionsRequest) returns (RevisionsResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/workflow/{path=**}/revisions"
			body: "*"
		};
	}
	rpc RevisionsStream (RevisionsRequest) returns (stream RevisionsResponse) {}
	rpc DeleteRevision (DeleteRevisionRequest) returns (google.protobuf.Empty) {}
	rpc Tag (TagRequest) returns (google.protobuf.Empty) {}
	rpc Untag (UntagRequest) returns (google.protobuf.Empty) {}
	rpc Retag (RetagRequest) returns (google.protobuf.Empty) {}
	rpc Router (RouterRequest) returns (RouterResponse) {}
	rpc RouterStream (RouterRequest) returns (stream RouterResponse) {}
	rpc EditRouter (EditRouterRequest) returns (EditRouterResponse) {}
	rpc ValidateRef (ValidateRefRequest) returns (ValidateRefResponse) {}
	rpc ValidateRouter (ValidateRouterRequest) returns (ValidateRouterResponse) {}
	rpc Secrets (SecretsRequest) returns (SecretsResponse) {}
	rpc SecretsStream (SecretsRequest) returns (stream SecretsResponse) {}
	rpc SetSecret (SetSecretRequest) returns (SetSecretResponse) {}
	rpc DeleteSecret (DeleteSecretRequest) returns (google.protobuf.Empty) {}
	rpc Instance (InstanceRequest) returns (InstanceResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/instances/{instance}"
		};
	}
	rpc InstanceStream (InstanceRequest) returns (stream InstanceResponse) {}
	rpc Instances (InstancesRequest) returns (InstancesResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/instances"
		};
	}
	rpc InstancesStream (InstancesRequest) returns (stream InstancesResponse) {}
	rpc InstanceInput (InstanceInputRequest) returns (InstanceInputResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/instances/{instance}"
		};
	}
	rpc InstanceOutput (InstanceOutputRequest) returns (InstanceOutputResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/instances/{instance}"
		};
	}
	rpc InstanceLogs (InstanceLogsRequest) returns (InstanceLogsResponse) {
		option (google.api.http) = {
			get: "/api/namespaces/{namespace}/instances/{instance}/logs"
		};
	}
	rpc InstanceLogsParcels (InstanceLogsRequest) returns (stream InstanceLogsResponse) {}
	rpc StartWorkflow (StartWorkflowRequest) returns (StartWorkflowResponse) {
		option (google.api.http) = {
			post: "/api/namespaces/{namespace}/workflow/{path=**}/execute"
			body: "*"
		};
	}
	rpc RunWorkflow (RunWorkflowRequest) returns (stream RunWorkflowResponse) {
		option (google.api.http) = {
			post: "/api/namespaces/{namespace}/workflow/{path=**}/run"
			body: "*"
		};
	}
	rpc CancelInstance (CancelInstanceRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/api/namespaces/{namespace}/instances/{instance}"
		};
	}
	rpc BroadcastCloudevent (BroadcastCloudeventRequest) returns (google.protobuf.Empty) {}

	//

	rpc NamespaceVariable (NamespaceVariableRequest) returns (NamespaceVariableResponse) {}
	rpc NamespaceVariableParcels (NamespaceVariableRequest) returns (stream NamespaceVariableResponse) {}
	rpc NamespaceVariables (NamespaceVariablesRequest) returns (NamespaceVariablesResponse) {}
	rpc NamespaceVariablesStream (NamespaceVariablesRequest) returns (stream NamespaceVariablesResponse) {}
	rpc SetNamespaceVariable (SetNamespaceVariableRequest) returns (SetNamespaceVariableResponse) {}
	rpc SetNamespaceVariableParcels (stream SetNamespaceVariableRequest) returns (SetNamespaceVariableResponse) {}
	rpc DeleteNamespaceVariable (DeleteNamespaceVariableRequest) returns (google.protobuf.Empty) {}
	rpc RenameNamespaceVariable (RenameNamespaceVariableRequest) returns (RenameNamespaceVariableResponse) {}
	rpc WorkflowVariable (WorkflowVariableRequest) returns (WorkflowVariableResponse) {}
	rpc WorkflowVariableParcels (WorkflowVariableRequest) returns (stream WorkflowVariableResponse) {}
	rpc WorkflowVariables (WorkflowVariablesRequest) returns (WorkflowVariablesResponse) {}
	rpc WorkflowVariablesStream (WorkflowVariablesRequest) returns (stream WorkflowVariablesResponse) {}
	rpc SetWorkflowVariable (SetWorkflowVariableRequest) returns (SetWorkflowVariableResponse) {}
	rpc SetWorkflowVariableParcels (stream SetWorkflowVariableRequest) returns (SetWorkflowVariableResponse) {}
	rpc DeleteWorkflowVariable (DeleteWorkflowVariableRequest) returns (google.protobuf.Empty) {}
	rpc RenameWorkflowVariable (RenameWorkflowVariableRequest) returns (RenameWorkflowVariableResponse) {}
	rpc InstanceVariable (InstanceVariableRequest) returns (InstanceVariableResponse) {}
	rpc InstanceVariableParcels (InstanceVariableRequest) returns (stream InstanceVariableResponse) {}
	rpc InstanceVariables (InstanceVariablesRequest) returns (InstanceVariablesResponse) {}
	rpc InstanceVariablesStream (InstanceVariablesRequest) returns (stream InstanceVariablesResponse) {}
	rpc SetInstanceVariable (SetInstanceVariableRequest) returns (SetInstanceVariableResponse) {}
	rpc SetInstanceVariableParcels (stream SetInstanceVariableRequest) returns (SetInstanceVariableResponse) {}
	rpc DeleteInstanceVariable (DeleteInstanceVariableRequest) returns (google.protobuf.Empty) {}
	rpc RenameInstanceVariable (RenameInstanceVariableRequest) returns (RenameInstanceVariableResponse) {}

	rpc JQ (JQRequest) returns (JQResponse) {}

	// COMING SOON:
	//
	// rpc ValidateWorkflow (ValidateWorkflowRequest) returns (ValidateWorkflowResponse) {}
	// Dependencies // Return dependency graph.
	// Crons // List of cron schedules on the namespace.
	// Broadcast // Broadcast Cloudevent.
	// EventListeners // Get list of event listeners.
	// Linting
	// LintRevision
	// LintPayload
	// Workflow Metrics
}

service Internal {
 	rpc ReportActionResults (ReportActionResultsRequest) returns (google.protobuf.Empty) {}
 	rpc ActionLog(ActionLogRequest) returns (google.protobuf.Empty) {}
	// rpc Resume (ResumeRequest) returns (google.protobuf.Empty) {}

	rpc NamespaceVariableParcels (VariableInternalRequest) returns (stream VariableInternalResponse) {}
	rpc SetNamespaceVariableParcels (stream SetVariableInternalRequest) returns (SetVariableInternalResponse) {}
	rpc WorkflowVariableParcels (VariableInternalRequest) returns (stream VariableInternalResponse) {}
	rpc SetWorkflowVariableParcels (stream SetVariableInternalRequest) returns (SetVariableInternalResponse) {}
	rpc InstanceVariableParcels (VariableInternalRequest) returns (stream VariableInternalResponse) {}
	rpc SetInstanceVariableParcels (stream SetVariableInternalRequest) returns (SetVariableInternalResponse) {}
}
