syntax = "proto3";

package direktiv_flow;

option go_package = "github.com/direktiv/direktiv/pkg/flow/grpc";

import "google/protobuf/timestamp.proto";

import "pkg/flow/grpc/pagination.proto";

message BroadcastCloudeventRequest {
	string namespace = 1;
	bytes cloudevent = 2;
	int64 timer = 3;
}

message EventListenersRequest {
	Pagination pagination = 1;
	string namespace = 2;
}

message EventDef {
	string type = 1;
	map<string, string> filters = 2;
}

message EventListener {
	string workflow = 1;
	string instance = 2;
	google.protobuf.Timestamp updated_at = 3;
	string mode = 4;
	repeated EventDef events = 5;
	// correlations 
	google.protobuf.Timestamp created_at = 6;
}

message EventListenersResponse {
	string namespace = 1;
	PageInfo pageInfo = 3;
	repeated EventListener results = 5;
}

message HistoricalEventRequest {
	string namespace = 1;
	string id = 2;
}

message HistoricalEventResponse {
	string namespace = 1;
	google.protobuf.Timestamp received_at = 2;
	string id = 3;
	string source = 4;
	string type = 5;
	bytes cloudevent = 6;
}

message EventHistoryRequest {
	string namespace = 1;
	Pagination pagination = 2;
}

message Event {
	google.protobuf.Timestamp received_at = 1;
	string id = 2;
	string source = 3;
	string type = 4;
	bytes cloudevent = 5;
}

message Events {
	PageInfo pageInfo = 2;
	repeated Event results = 4;
}


message EventHistoryResponse {
	Events events = 1;
	string namespace = 2;
}

message ReplayEventRequest {
	string namespace = 1;
	string id = 2;
}

message ApplyCloudEventFilterRequest {
	string namespace = 1;
	bytes cloudevent = 2;
	string filterName = 3;
}

message ApplyCloudEventFilterResponse{
		bytes event = 1;
	}

message DeleteCloudEventFilterRequest{
		string namespace = 1;
		string filterName = 2;
	}

message CreateCloudEventFilterRequest{
	string namespace = 1;
	string filtername = 2; 
	string jsCode = 3;  
}	

message UpdateCloudEventFilterRequest{
	string namespace = 1;
	string filtername = 2; 
	string jsCode = 3;  
}	

message GetCloudEventFiltersRequest{
	 string namespace = 1;
	 string name = 2;
}

message GetCloudEventFiltersResponse {
	message EventFilter {
		 string name = 1;
	}
	repeated EventFilter eventFilter = 1;
}

message GetCloudEventFilterScriptRequest{
	string namespace = 1;
	string name = 2;

}

message GetCloudEventFilterScriptResponse{
	string filtername = 1;
	string jsCode = 2;

}
	

