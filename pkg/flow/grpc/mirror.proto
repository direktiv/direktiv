syntax = "proto3";

package direktiv_flow;

option go_package = "github.com/direktiv/direktiv/pkg/flow/grpc";

import "google/protobuf/timestamp.proto";

import "pkg/flow/grpc/pagination.proto";

message MirrorSettings {
    string url = 1;
    string ref = 2;
    string cron = 3;
    string publicKey = 4;
    string privateKey = 5;
    string passphrase = 6;
}

message MirrorActivityInfo {
    string id = 1;
    string type = 2;
    string status = 3;
    google.protobuf.Timestamp created_at = 4;
	google.protobuf.Timestamp updated_at = 5;
}

message MirrorActivitiesEdge {
	MirrorActivityInfo node = 1;
	string cursor = 2;
}

message MirrorActivities {
    int32 totalCount = 1;
	PageInfo pageInfo = 2;
	repeated MirrorActivitiesEdge edges = 3;
}

message MirrorInfo {
    string url = 1;
    string ref = 2;
    string cron = 3;
    string publicKey = 4;
    // bool locked = 5;
    string commitId = 6;
    google.protobuf.Timestamp lastSync = 7;
    string privateKey = 8;
    string passphrase = 9;
}

message CreateNamespaceMirrorRequest {
	string name = 1;
    bool idempotent = 2;
    MirrorSettings settings = 3;
}

message CreateDirectoryMirrorRequest {
	string namespace = 1;
	string path = 2;
	// bool idempotent = 3;
	bool parents = 4;
    MirrorSettings settings = 5;
}

message UpdateMirrorSettingsRequest {
    string namespace = 1;
	string path = 2;
    MirrorSettings settings = 3;
}

message LockMirrorRequest {
    string namespace = 1;
	string path = 2;
}

message UnlockMirrorRequest {
    string namespace = 1;
	string path = 2;
}

message SoftSyncMirrorRequest {
    string namespace = 1;
	string path = 2;
}

message HardSyncMirrorRequest {
    string namespace = 1;
	string path = 2;
}

message MirrorInfoRequest {
    string namespace = 2;
    string path = 3;
    Pagination pagination = 4;
}

message MirrorInfoResponse {
    string namespace = 2;
    MirrorInfo info = 4;
    MirrorActivities activities = 5;
}

message CancelMirrorActivityRequest {
    string namespace = 2;
    string activity = 3;
}
