syntax = "proto3";

package direktiv_flow;

option go_package = "github.com/direktiv/direktiv/pkg/flow/grpc";

import "google/protobuf/timestamp.proto";

import "pkg/flow/grpc/pagination.proto";

message InstanceWorkflow {
	string path = 1;
	string name = 2;
	string parent = 3;
	bytes source = 4;
}

message Instance {
	google.protobuf.Timestamp created_at = 1;
	google.protobuf.Timestamp updated_at = 2;
	string id = 3;
	string as = 4;
	string status = 5;
	string errorCode = 6;
	string errorMessage = 7;
	string invoker = 8;
}

message Instances {
	PageInfo pageInfo = 2;
	repeated Instance results = 4;
}

message InstanceRequest {
	string namespace = 1;
	string instance = 2;
}

message InstanceResponse {
	string namespace = 1;
	Instance instance = 2;
	string invokedBy = 3;
	repeated string flow = 4;
	InstanceWorkflow workflow = 5;
}

message InstanceInputRequest {
	string namespace = 1;
	string instance = 2;
}

message InstanceInputResponse {
	string namespace = 1;
	Instance instance = 2;
	bytes data = 3;
}

message InstanceOutputRequest {
	string namespace = 1;
	string instance = 2;
}

message InstanceOutputResponse {
	string namespace = 1;
	Instance instance = 2;
	bytes data = 3;
}

message InstanceMetadataRequest {
	string namespace = 1;
	string instance = 2;
}

message InstanceMetadataResponse {
	string namespace = 1;
	Instance instance = 2;
	bytes data = 3;
}

message InstancesRequest {
	string namespace = 1;
	Pagination pagination = 2;
}

message InstancesResponse {
	Instances instances = 1;
	string namespace = 2;
}

message CancelInstanceRequest {
	string namespace = 1;
	string instance = 2;
}

message StartWorkflowRequest {
	string namespace = 1;
	string path = 2;
	bytes input = 4;
	bool hold = 5;
}

message StartWorkflowResponse {
	string namespace = 1;
	string instance = 2;
}

message ReleaseInstanceRequest {
	string namespace = 1;
	string instance = 2;
}

message ReleaseInstanceResponse {
	string namespace = 1;
	string instance = 2;
}

message RunWorkflowRequest {
	string namespace = 1;
	string path = 2;
	bytes input = 4;
}

message RunWorkflowResponse {
	string namespace = 1;
	string instance = 2;
	// TODO
}

message AwaitWorkflowRequest {
	string namespace = 1;
	string path = 2;
	bytes input = 4;
}

message AwaitWorkflowResponse {
	string namespace = 1;
	Instance instance = 2;
	string invokedBy = 3;
	repeated string flow = 4;
	InstanceWorkflow workflow = 5;
	bytes data = 6;
}

