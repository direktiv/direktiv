// Code generated by go-swagger; DO NOT EDIT.

package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSetNamespaceConfigParams creates a new SetNamespaceConfigParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetNamespaceConfigParams() *SetNamespaceConfigParams {
	return &SetNamespaceConfigParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetNamespaceConfigParamsWithTimeout creates a new SetNamespaceConfigParams object
// with the ability to set a timeout on a request.
func NewSetNamespaceConfigParamsWithTimeout(timeout time.Duration) *SetNamespaceConfigParams {
	return &SetNamespaceConfigParams{
		timeout: timeout,
	}
}

// NewSetNamespaceConfigParamsWithContext creates a new SetNamespaceConfigParams object
// with the ability to set a context for a request.
func NewSetNamespaceConfigParamsWithContext(ctx context.Context) *SetNamespaceConfigParams {
	return &SetNamespaceConfigParams{
		Context: ctx,
	}
}

// NewSetNamespaceConfigParamsWithHTTPClient creates a new SetNamespaceConfigParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetNamespaceConfigParamsWithHTTPClient(client *http.Client) *SetNamespaceConfigParams {
	return &SetNamespaceConfigParams{
		HTTPClient: client,
	}
}

/* SetNamespaceConfigParams contains all the parameters to send to the API endpoint
   for the set namespace config operation.

   Typically these are written to a http.Request.
*/
type SetNamespaceConfigParams struct {

	/* ConfigPayload.

	   Payload that contains the config information to set. Note: This payload only need to contain the properities you wish to set.
	*/
	ConfigPayload SetNamespaceConfigBody

	/* Namespace.

	   target namespace to update
	*/
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set namespace config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetNamespaceConfigParams) WithDefaults() *SetNamespaceConfigParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set namespace config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetNamespaceConfigParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set namespace config params
func (o *SetNamespaceConfigParams) WithTimeout(timeout time.Duration) *SetNamespaceConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set namespace config params
func (o *SetNamespaceConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set namespace config params
func (o *SetNamespaceConfigParams) WithContext(ctx context.Context) *SetNamespaceConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set namespace config params
func (o *SetNamespaceConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set namespace config params
func (o *SetNamespaceConfigParams) WithHTTPClient(client *http.Client) *SetNamespaceConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set namespace config params
func (o *SetNamespaceConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConfigPayload adds the configPayload to the set namespace config params
func (o *SetNamespaceConfigParams) WithConfigPayload(configPayload SetNamespaceConfigBody) *SetNamespaceConfigParams {
	o.SetConfigPayload(configPayload)
	return o
}

// SetConfigPayload adds the configPayload to the set namespace config params
func (o *SetNamespaceConfigParams) SetConfigPayload(configPayload SetNamespaceConfigBody) {
	o.ConfigPayload = configPayload
}

// WithNamespace adds the namespace to the set namespace config params
func (o *SetNamespaceConfigParams) WithNamespace(namespace string) *SetNamespaceConfigParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the set namespace config params
func (o *SetNamespaceConfigParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *SetNamespaceConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.ConfigPayload); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
