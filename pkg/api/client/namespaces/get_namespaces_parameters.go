// Code generated by go-swagger; DO NOT EDIT.

package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetNamespacesParams creates a new GetNamespacesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetNamespacesParams() *GetNamespacesParams {
	return &GetNamespacesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetNamespacesParamsWithTimeout creates a new GetNamespacesParams object
// with the ability to set a timeout on a request.
func NewGetNamespacesParamsWithTimeout(timeout time.Duration) *GetNamespacesParams {
	return &GetNamespacesParams{
		timeout: timeout,
	}
}

// NewGetNamespacesParamsWithContext creates a new GetNamespacesParams object
// with the ability to set a context for a request.
func NewGetNamespacesParamsWithContext(ctx context.Context) *GetNamespacesParams {
	return &GetNamespacesParams{
		Context: ctx,
	}
}

// NewGetNamespacesParamsWithHTTPClient creates a new GetNamespacesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetNamespacesParamsWithHTTPClient(client *http.Client) *GetNamespacesParams {
	return &GetNamespacesParams{
		HTTPClient: client,
	}
}

/* GetNamespacesParams contains all the parameters to send to the API endpoint
   for the get namespaces operation.

   Typically these are written to a http.Request.
*/
type GetNamespacesParams struct {

	/* FilterField.

	   field to filter
	*/
	FilterField *string

	/* FilterType.

	   filter behaviour
	*/
	FilterType *string

	/* OrderDirection.

	   order direction
	*/
	OrderDirection *string

	/* OrderField.

	   field to order by
	*/
	OrderField *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get namespaces params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNamespacesParams) WithDefaults() *GetNamespacesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get namespaces params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNamespacesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get namespaces params
func (o *GetNamespacesParams) WithTimeout(timeout time.Duration) *GetNamespacesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get namespaces params
func (o *GetNamespacesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get namespaces params
func (o *GetNamespacesParams) WithContext(ctx context.Context) *GetNamespacesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get namespaces params
func (o *GetNamespacesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get namespaces params
func (o *GetNamespacesParams) WithHTTPClient(client *http.Client) *GetNamespacesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get namespaces params
func (o *GetNamespacesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilterField adds the filterField to the get namespaces params
func (o *GetNamespacesParams) WithFilterField(filterField *string) *GetNamespacesParams {
	o.SetFilterField(filterField)
	return o
}

// SetFilterField adds the filterField to the get namespaces params
func (o *GetNamespacesParams) SetFilterField(filterField *string) {
	o.FilterField = filterField
}

// WithFilterType adds the filterType to the get namespaces params
func (o *GetNamespacesParams) WithFilterType(filterType *string) *GetNamespacesParams {
	o.SetFilterType(filterType)
	return o
}

// SetFilterType adds the filterType to the get namespaces params
func (o *GetNamespacesParams) SetFilterType(filterType *string) {
	o.FilterType = filterType
}

// WithOrderDirection adds the orderDirection to the get namespaces params
func (o *GetNamespacesParams) WithOrderDirection(orderDirection *string) *GetNamespacesParams {
	o.SetOrderDirection(orderDirection)
	return o
}

// SetOrderDirection adds the orderDirection to the get namespaces params
func (o *GetNamespacesParams) SetOrderDirection(orderDirection *string) {
	o.OrderDirection = orderDirection
}

// WithOrderField adds the orderField to the get namespaces params
func (o *GetNamespacesParams) WithOrderField(orderField *string) *GetNamespacesParams {
	o.SetOrderField(orderField)
	return o
}

// SetOrderField adds the orderField to the get namespaces params
func (o *GetNamespacesParams) SetOrderField(orderField *string) {
	o.OrderField = orderField
}

// WriteToRequest writes these params to a swagger request
func (o *GetNamespacesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FilterField != nil {

		// query param filter.field
		var qrFilterField string

		if o.FilterField != nil {
			qrFilterField = *o.FilterField
		}
		qFilterField := qrFilterField
		if qFilterField != "" {

			if err := r.SetQueryParam("filter.field", qFilterField); err != nil {
				return err
			}
		}
	}

	if o.FilterType != nil {

		// query param filter.type
		var qrFilterType string

		if o.FilterType != nil {
			qrFilterType = *o.FilterType
		}
		qFilterType := qrFilterType
		if qFilterType != "" {

			if err := r.SetQueryParam("filter.type", qFilterType); err != nil {
				return err
			}
		}
	}

	if o.OrderDirection != nil {

		// query param order.direction
		var qrOrderDirection string

		if o.OrderDirection != nil {
			qrOrderDirection = *o.OrderDirection
		}
		qOrderDirection := qrOrderDirection
		if qOrderDirection != "" {

			if err := r.SetQueryParam("order.direction", qOrderDirection); err != nil {
				return err
			}
		}
	}

	if o.OrderField != nil {

		// query param order.field
		var qrOrderField string

		if o.OrderField != nil {
			qrOrderField = *o.OrderField
		}
		qOrderField := qrOrderField
		if qOrderField != "" {

			if err := r.SetQueryParam("order.field", qOrderField); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
