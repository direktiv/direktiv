// Code generated by go-swagger; DO NOT EDIT.

package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/direktiv/direktiv/pkg/api/models"
)

// DeleteNodeReader is a Reader for the DeleteNode structure.
type DeleteNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteNodeOK creates a DeleteNodeOK with default headers values
func NewDeleteNodeOK() *DeleteNodeOK {
	return &DeleteNodeOK{}
}

/* DeleteNodeOK describes a response with status code 200, with default header values.

node has been deleted
*/
type DeleteNodeOK struct {
	Payload models.OkBody
}

func (o *DeleteNodeOK) Error() string {
	return fmt.Sprintf("[DELETE /api/namespaces/{namespace}/tree/{node}?op=delete-node][%d] deleteNodeOK  %+v", 200, o.Payload)
}
func (o *DeleteNodeOK) GetPayload() models.OkBody {
	return o.Payload
}

func (o *DeleteNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNodeDefault creates a DeleteNodeDefault with default headers values
func NewDeleteNodeDefault(code int) *DeleteNodeDefault {
	return &DeleteNodeDefault{
		_statusCode: code,
	}
}

/* DeleteNodeDefault describes a response with status code -1, with default header values.

an error has occurred
*/
type DeleteNodeDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete node default response
func (o *DeleteNodeDefault) Code() int {
	return o._statusCode
}

func (o *DeleteNodeDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/namespaces/{namespace}/tree/{node}?op=delete-node][%d] deleteNode default  %+v", o._statusCode, o.Payload)
}
func (o *DeleteNodeDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
