// Code generated by go-swagger; DO NOT EDIT.

package workflow_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListWorkflowServicesParams creates a new ListWorkflowServicesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListWorkflowServicesParams() *ListWorkflowServicesParams {
	return &ListWorkflowServicesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListWorkflowServicesParamsWithTimeout creates a new ListWorkflowServicesParams object
// with the ability to set a timeout on a request.
func NewListWorkflowServicesParamsWithTimeout(timeout time.Duration) *ListWorkflowServicesParams {
	return &ListWorkflowServicesParams{
		timeout: timeout,
	}
}

// NewListWorkflowServicesParamsWithContext creates a new ListWorkflowServicesParams object
// with the ability to set a context for a request.
func NewListWorkflowServicesParamsWithContext(ctx context.Context) *ListWorkflowServicesParams {
	return &ListWorkflowServicesParams{
		Context: ctx,
	}
}

// NewListWorkflowServicesParamsWithHTTPClient creates a new ListWorkflowServicesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListWorkflowServicesParamsWithHTTPClient(client *http.Client) *ListWorkflowServicesParams {
	return &ListWorkflowServicesParams{
		HTTPClient: client,
	}
}

/* ListWorkflowServicesParams contains all the parameters to send to the API endpoint
   for the list workflow services operation.

   Typically these are written to a http.Request.
*/
type ListWorkflowServicesParams struct {

	/* Namespace.

	   target namespace
	*/
	Namespace string

	/* Workflow.

	   path to target workflow
	*/
	Workflow string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list workflow services params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListWorkflowServicesParams) WithDefaults() *ListWorkflowServicesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list workflow services params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListWorkflowServicesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list workflow services params
func (o *ListWorkflowServicesParams) WithTimeout(timeout time.Duration) *ListWorkflowServicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list workflow services params
func (o *ListWorkflowServicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list workflow services params
func (o *ListWorkflowServicesParams) WithContext(ctx context.Context) *ListWorkflowServicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list workflow services params
func (o *ListWorkflowServicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list workflow services params
func (o *ListWorkflowServicesParams) WithHTTPClient(client *http.Client) *ListWorkflowServicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list workflow services params
func (o *ListWorkflowServicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespace adds the namespace to the list workflow services params
func (o *ListWorkflowServicesParams) WithNamespace(namespace string) *ListWorkflowServicesParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the list workflow services params
func (o *ListWorkflowServicesParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithWorkflow adds the workflow to the list workflow services params
func (o *ListWorkflowServicesParams) WithWorkflow(workflow string) *ListWorkflowServicesParams {
	o.SetWorkflow(workflow)
	return o
}

// SetWorkflow adds the workflow to the list workflow services params
func (o *ListWorkflowServicesParams) SetWorkflow(workflow string) {
	o.Workflow = workflow
}

// WriteToRequest writes these params to a swagger request
func (o *ListWorkflowServicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param workflow
	if err := r.SetPathParam("workflow", o.Workflow); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
