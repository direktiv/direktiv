// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/direktiv/direktiv/pkg/api/models"
)

// DeleteFolderReader is a Reader for the DeleteFolder structure.
type DeleteFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteFolderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteFolderDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteFolderOK creates a DeleteFolderOK with default headers values
func NewDeleteFolderOK() *DeleteFolderOK {
	return &DeleteFolderOK{}
}

/*
DeleteFolderOK describes a response with status code 200, with default header values.

namespace folder has been successfully deleted
*/
type DeleteFolderOK struct {
	Payload models.OkBody
}

// IsSuccess returns true when this delete folder o k response has a 2xx status code
func (o *DeleteFolderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete folder o k response has a 3xx status code
func (o *DeleteFolderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete folder o k response has a 4xx status code
func (o *DeleteFolderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete folder o k response has a 5xx status code
func (o *DeleteFolderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete folder o k response a status code equal to that given
func (o *DeleteFolderOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteFolderOK) Error() string {
	return fmt.Sprintf("[DELETE /api/namespaces/{namespace}/secrets/{folder}/][%d] deleteFolderOK  %+v", 200, o.Payload)
}

func (o *DeleteFolderOK) String() string {
	return fmt.Sprintf("[DELETE /api/namespaces/{namespace}/secrets/{folder}/][%d] deleteFolderOK  %+v", 200, o.Payload)
}

func (o *DeleteFolderOK) GetPayload() models.OkBody {
	return o.Payload
}

func (o *DeleteFolderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFolderDefault creates a DeleteFolderDefault with default headers values
func NewDeleteFolderDefault(code int) *DeleteFolderDefault {
	return &DeleteFolderDefault{
		_statusCode: code,
	}
}

/*
DeleteFolderDefault describes a response with status code -1, with default header values.

folder not found
*/
type DeleteFolderDefault struct {
	_statusCode int

	Payload models.ErrorResponse
}

// Code gets the status code for the delete folder default response
func (o *DeleteFolderDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete folder default response has a 2xx status code
func (o *DeleteFolderDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete folder default response has a 3xx status code
func (o *DeleteFolderDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete folder default response has a 4xx status code
func (o *DeleteFolderDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete folder default response has a 5xx status code
func (o *DeleteFolderDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete folder default response a status code equal to that given
func (o *DeleteFolderDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteFolderDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/namespaces/{namespace}/secrets/{folder}/][%d] deleteFolder default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFolderDefault) String() string {
	return fmt.Sprintf("[DELETE /api/namespaces/{namespace}/secrets/{folder}/][%d] deleteFolder default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFolderDefault) GetPayload() models.ErrorResponse {
	return o.Payload
}

func (o *DeleteFolderDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
