// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/direktiv/direktiv/pkg/api/models"
)

// SearchSecretReader is a Reader for the SearchSecret structure.
type SearchSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSearchSecretDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchSecretOK creates a SearchSecretOK with default headers values
func NewSearchSecretOK() *SearchSecretOK {
	return &SearchSecretOK{}
}

/*
SearchSecretOK describes a response with status code 200, with default header values.

successfully got namespace nodes
*/
type SearchSecretOK struct {
	Payload models.OkBody
}

// IsSuccess returns true when this search secret o k response has a 2xx status code
func (o *SearchSecretOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search secret o k response has a 3xx status code
func (o *SearchSecretOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secret o k response has a 4xx status code
func (o *SearchSecretOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search secret o k response has a 5xx status code
func (o *SearchSecretOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search secret o k response a status code equal to that given
func (o *SearchSecretOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchSecretOK) Error() string {
	return fmt.Sprintf("[GET /api/namespaces/search/{namespace}/secrets/{name}][%d] searchSecretOK  %+v", 200, o.Payload)
}

func (o *SearchSecretOK) String() string {
	return fmt.Sprintf("[GET /api/namespaces/search/{namespace}/secrets/{name}][%d] searchSecretOK  %+v", 200, o.Payload)
}

func (o *SearchSecretOK) GetPayload() models.OkBody {
	return o.Payload
}

func (o *SearchSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSecretDefault creates a SearchSecretDefault with default headers values
func NewSearchSecretDefault(code int) *SearchSecretDefault {
	return &SearchSecretDefault{
		_statusCode: code,
	}
}

/*
SearchSecretDefault describes a response with status code -1, with default header values.

an error has occurred
*/
type SearchSecretDefault struct {
	_statusCode int

	Payload models.ErrorResponse
}

// Code gets the status code for the search secret default response
func (o *SearchSecretDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this search secret default response has a 2xx status code
func (o *SearchSecretDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this search secret default response has a 3xx status code
func (o *SearchSecretDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this search secret default response has a 4xx status code
func (o *SearchSecretDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this search secret default response has a 5xx status code
func (o *SearchSecretDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this search secret default response a status code equal to that given
func (o *SearchSecretDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *SearchSecretDefault) Error() string {
	return fmt.Sprintf("[GET /api/namespaces/search/{namespace}/secrets/{name}][%d] searchSecret default  %+v", o._statusCode, o.Payload)
}

func (o *SearchSecretDefault) String() string {
	return fmt.Sprintf("[GET /api/namespaces/search/{namespace}/secrets/{name}][%d] searchSecret default  %+v", o._statusCode, o.Payload)
}

func (o *SearchSecretDefault) GetPayload() models.ErrorResponse {
	return o.Payload
}

func (o *SearchSecretDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
