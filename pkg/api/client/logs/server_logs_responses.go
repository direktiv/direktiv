// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/direktiv/direktiv/pkg/api/models"
)

// ServerLogsReader is a Reader for the ServerLogs structure.
type ServerLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServerLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServerLogsOK creates a ServerLogsOK with default headers values
func NewServerLogsOK() *ServerLogsOK {
	return &ServerLogsOK{}
}

/* ServerLogsOK describes a response with status code 200, with default header values.

successfully got server logs
*/
type ServerLogsOK struct {
	Payload models.OkBody
}

func (o *ServerLogsOK) Error() string {
	return fmt.Sprintf("[GET /api/logs][%d] serverLogsOK  %+v", 200, o.Payload)
}
func (o *ServerLogsOK) GetPayload() models.OkBody {
	return o.Payload
}

func (o *ServerLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerLogsDefault creates a ServerLogsDefault with default headers values
func NewServerLogsDefault(code int) *ServerLogsDefault {
	return &ServerLogsDefault{
		_statusCode: code,
	}
}

/* ServerLogsDefault describes a response with status code -1, with default header values.

an error has occurred
*/
type ServerLogsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the server logs default response
func (o *ServerLogsDefault) Code() int {
	return o._statusCode
}

func (o *ServerLogsDefault) Error() string {
	return fmt.Sprintf("[GET /api/logs][%d] serverLogs default  %+v", o._statusCode, o.Payload)
}
func (o *ServerLogsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
