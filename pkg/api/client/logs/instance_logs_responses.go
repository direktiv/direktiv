// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/direktiv/direktiv/pkg/api/models"
)

// InstanceLogsReader is a Reader for the InstanceLogs structure.
type InstanceLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstanceLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstanceLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewInstanceLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewInstanceLogsOK creates a InstanceLogsOK with default headers values
func NewInstanceLogsOK() *InstanceLogsOK {
	return &InstanceLogsOK{}
}

/* InstanceLogsOK describes a response with status code 200, with default header values.

successfully got instance logs
*/
type InstanceLogsOK struct {
	Payload models.OkBody
}

func (o *InstanceLogsOK) Error() string {
	return fmt.Sprintf("[GET /api/namespaces/{namespace}/instances/{instance}/logs][%d] instanceLogsOK  %+v", 200, o.Payload)
}
func (o *InstanceLogsOK) GetPayload() models.OkBody {
	return o.Payload
}

func (o *InstanceLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstanceLogsDefault creates a InstanceLogsDefault with default headers values
func NewInstanceLogsDefault(code int) *InstanceLogsDefault {
	return &InstanceLogsDefault{
		_statusCode: code,
	}
}

/* InstanceLogsDefault describes a response with status code -1, with default header values.

an error has occurred
*/
type InstanceLogsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the instance logs default response
func (o *InstanceLogsDefault) Code() int {
	return o._statusCode
}

func (o *InstanceLogsDefault) Error() string {
	return fmt.Sprintf("[GET /api/namespaces/{namespace}/instances/{instance}/logs][%d] instanceLogs default  %+v", o._statusCode, o.Payload)
}
func (o *InstanceLogsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *InstanceLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
