apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "direktiv.fullname" . }}-flow
  labels:
    {{- include "direktiv.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.flow.replicas }}
  selector:
    matchLabels:
      {{- include "direktiv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: "true"
        prometheus.io/scheme: "http"
      labels:
        {{- include "direktiv.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 33333
        runAsGroup: 22222
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "direktiv.serviceAccountName" . }}
      containers:
{{- if .Values.opentelemetry.enabled }}
{{ include "direktiv.opentelemetry" . | indent 8 }}
{{- end }}
{{- if .Values.flow.extraContainers }}
{{ toYaml .Values.flow.extraContainers | indent 8}}
{{- end }}
        - name: flow
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "8192Mi"
              cpu: "8"
          image: "{{ .Values.registry }}/{{ .Values.flow.image }}:{{ .Values.flow.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["/bin/direktiv", "server", "/etc/direktiv/flow-config.yaml"]
          volumeMounts:
          {{- if .Values.flow.extraVolumeMounts -}}
          {{ toYaml .Values.flow.extraVolumeMounts | nindent 10 }}
          {{- end }}
          - name: flow-config
            mountPath: /etc/direktiv/flow-config.yaml
            subPath: flow-config.yaml
          ports:
            - name: flow
              containerPort: 6666
              protocol: TCP
            - name: internal
              containerPort: 7777
              protocol: TCP
          env:
          - name: DIREKTIV_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DIREKTIV_DEBUG
            value: {{ .Values.debug | quote }}
          - name: DIREKTIV_SERVICE_NAMESPACE
            value: {{ .Values.functions.namespace }}
          {{- if or (ne .Values.http_proxy "") (ne .Values.https_proxy "") }}
          - name: "HTTP_PROXY"
            value: "{{ .Values.http_proxy }}"
          - name: "HTTPS_PROXY"
            value: "{{ .Values.https_proxy }}"
          - name: "NO_PROXY"
            value: "{{ .Values.no_proxy }}"
          {{- end }}
          - name: DIREKTIV_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: db
{{ include "direktiv.fluentbit" . | indent 8 }}
        - name: secrets
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "1"
          image: "{{ .Values.registry }}/{{ .Values.secrets.image }}:{{ .Values.secrets.tag | default .Chart.AppVersion }}"
          command: ["/bin/secrets"]
          imagePullPolicy: {{ .Values.pullPolicy }}
          volumeMounts:
          {{- if .Values.flow.extraVolumeMounts -}}
          {{ toYaml .Values.flow.extraVolumeMounts | nindent 10 }}
          {{- end }}
          ports:
            - name: secrets
              containerPort: 2610
              protocol: TCP
          env:
          - name: DIREKTIV_DEBUG
            value: {{ .Values.debug | quote }}
          - name: DIREKTIV_SECRETS_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: db
          - name: DIREKTIV_SECRETS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: key
          - name: PGSSLMODE
            value: {{ .Values.database.sslmode| quote }}
      volumes:
{{- if .Values.opentelemetry.enabled }}
{{ include "direktiv.opentelemetry.volume" . | indent 8 }}
{{- end }}
        {{- if .Values.flow.extraVolumes }}
        {{ toYaml .Values.flow.extraVolumes | nindent 8 }}
        {{- end }}
        - name: flow-config
          configMap:
            name: {{ include "direktiv.fullname" . }}-config-flow
        - name: fluentcfg
          configMap:
            name:  {{ include "direktiv.fullname" . }}-config-fluentbit
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
