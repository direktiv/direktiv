{{- if .Values.withUI -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "direktiv.fullname" . }}-ui
  labels:
    {{ include "direktiv.labelsAPI" . | nindent 4 }}-ui
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "direktiv.selectorLabelsUI" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "direktiv.selectorLabelsUI" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 33333
        runAsGroup: 22222
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "direktiv.serviceAccountName" . }}
      containers:
        - name: ui
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.25"
            limits:
              memory: "2048Mi"
              cpu: "2"
          readinessProbe:
            httpGet:
              path: /manifest.json
              port: 8080
              {{- if ne  .Values.ui.certificate "none" }}
              scheme: HTTPS
              {{- end }}
            periodSeconds: 10
            failureThreshold: 3
          image: "{{ .Values.registry }}/{{ .Values.ui.image }}:{{ .Values.ui.tag | default .Chart.AppVersion }}"
          env:
          - name: SERVE_PORT
            value: "8080"
          - name: SERVE_ADDRESS
            value: "0.0.0.0"
          - name: API_URL
            value: "/api"
          - name: KEYCLOAK_URL
            value: {{ .Values.ui.keycloakUrl }}
          {{- if ne .Values.ui.certificate "none" }}
          volumeMounts:
          - name: certs
            mountPath: "/etc/direktiv/certs/http"
            readOnly: true
          {{- end }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: ui
              containerPort: 8080
              protocol: TCP
      volumes:
      {{- if ne  .Values.ui.certificate "none" }}
        - name: certs
          secret:
            secretName: {{ .Values.ui.certificate }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
