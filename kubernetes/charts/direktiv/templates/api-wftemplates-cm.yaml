apiVersion: v1
data:
  action.yml: "id: action\ndescription: A simple 'action' state that sends a get request\"\nfunctions:\n- id: get\n  image: vorteil/request:v2\nstates:\n- id: getter \n  type: action\n  action:\n    function: get\n    input: |\n      {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/todos/1\",\n      }\n"
  consume-event.yml: |
    id: consume-event
    functions:
    - id: greeter
      image: vorteil/greeting:v2
    description: A simple 'consumeEvent' state that listens for the greetingcloudevent generated from the template 'generate-event'.
    states:
    - id: ce
      type: consumeEvent
      event:
        type: greetingcloudevent
      timeout: PT1H
      transition: greet
    - id: greet
      type: action
      action:
        function: greeter
        input: .greetingcloudevent
      transform: |
        {
          greeting: .return.greeting
        }
  delay.yml: |-
    id: delay
    description: A simple 'delay' state that waits for 5 seconds
    states:
    - id: delay
      type: delay
      duration: PT5S
  error.yml: "id: error\ndescription: A simple 'error' state workflow that checks an email attempts to validate it.\nstates:\n- id: data\n  type: noop\n  transform: |\n    {\n      email: \"trent.hilliamvorteil.io\"\n    }\n  transition: validate-email\n- id: validate-email\n  type: validate\n  subject: .\n  schema:\n    type: object\n    properties:\n      email:\n        type: string\n        format: email\n  catch:\n  - error: direktiv.schema.*\n    transition: email-not-valid \n  transition: email-valid\n- id: email-not-valid\n  type: error\n  error: direktiv.schema.*\n  message: \"email '.email' is not valid\"\n- id: email-valid\n  type: noop\n  transform: |\n    {\n      result: \"Email is valid.\"\n    }\n"
  event-and.yml: "id: event-and\nfunctions:\n- id: greeter\n  image: vorteil/greeting:v2\n- id: solve\n  image: vorteil/solve:v2\ndescription: A simple 'eventAnd' that waits for events to be received.\nstates:\n- id: event-and\n  type: eventAnd\n  timeout: PT1H\n  events:\n  - event: \n      type: greetingcloudevent\n  - event: \n      type: solveexpressioncloudevent\n  transition: greet\n- id: greet\n  type: action\n  action:\n    function: greeter\n    input: .greetingcloudevent\n  transform: |\n    {\n      greeting: .return.greeting,\n      ceevent: .solveexpressioncloudevent\n    }\n  transition: solve\n- id: solve\n  type: action\n  action:\n    function: solve\n    input: .ceevent\n  transform: |\n    {\n      msggreeting: .greeting,\n      solvedexpression: .return\n    }"
  event-xor.yml: "id: event-xor\nfunctions:\n- id: greeter\n  image: vorteil/greeting:v2\n- id: solve2\n  image: vorteil/solve:v2\ndescription: A simple 'eventXor' that waits for events to be received.\nstates:\n- id: event-xor\n  type: eventXor\n  timeout: PT1H\n  events:\n  - event: \n      type: solveexpressioncloudevent\n    transition: solve\n  - event: \n      type: greetingcloudevent\n    transition: greet\n- id: greet\n  type: action\n  action:\n    function: greeter\n    input: .greetingcloudevent\n  transform: |\n    {\n      greeting: .return.greeting,\n    }\n- id: solve\n  type: action\n  action:\n    function: solve2\n    input: .solveexpressioncloudevent\n  transform: |\n    {\n      solvedexpression: .return\n    }"
  foreach.yml: "id: foreach\ndescription: A simple 'foreach' state that solves expressions\nfunctions: \n- id: solve\n  image: vorteil/solve:v2\nstates:\n- id: data\n  type: noop\n  transform: | \n    { \n      expressions: [\"4+10\", \"15-14\", \"100*3\",\"200/2\"] \n    }\n  transition: solve\n- id: solve\n  type: foreach\n  array: '.expressions[] | { expression: . }'\n  action:\n    function: solve\n    input: |\n      {\n        \"x\": .expression\n      }\n  transform: |\n    {\n      solved: .return\n    }"
  generate-greeting-event.yml: |-
    id: generate-greeting-event
    description: A simple 'generateEvent' state that sends data to a greeting listener.
    states:
    - id: generate
      type: generateEvent
      event:
        type: greetingcloudevent
        source: Direktiv
        data: |
          {
            name: "Trent"
          }
  generate-solve-event.yml: |-
    id: generate-solve-event
    description: A simple 'generateEvent' state that sends an expression to a solve listener.
    states:
    - id: generate
      type: generateEvent
      event:
        type: solveexpressioncloudevent
        source: Direktiv
        data: |
          {
            x: "10+5"
          }
  noop.yml: |
    id: noop
    description: A simple 'no-op' state that returns 'Hello world!'
    states:
    - id: helloworld
      type: noop
      transform: |
        {
         result: "Hello world!"
        }
  parallel.yml: "id: parallel\ndescription: A simple 'parallel' state workflow that runs solve container to solve expressions.\nfunctions: \n- id: solve\n  image: vorteil/solve:v2\nstates:\n- id: run\n  type: parallel\n  actions:\n  - function: solve\n    input: |\n      {\n        x: \"10*2\"\n      }\n  - function: solve\n    input: |\n      {\n        x: \"10%2\"\n      }\n  - function: solve\n    input: |\n      {\n        x: \"10-2\"\n      }\n  - function: solve\n    input: |\n      {\n        x: \"10+2\"\n      }\n  # Mode 'and' waits for all actions to be completed\n  # Mode 'or' waits for the first action to be completed\n  mode: and"
  switch.yml: "id: switch\ndescription: A simple 'switch' state that checks whether the age provided is older than 18.\nstates:\n- id: data\n  type: noop\n  transform: | \n    { \n      age: \"27\" \n    }\n  transition: check\n- id: check\n  type: switch\n  conditions:\n  - condition: '.age > 18'\n    transition: olderthan18\n  defaultTransition: youngerthan18\n- id: olderthan18\n  type: noop\n  transform: |\n    {\n      result: \"You are older than 18.\"\n    }\n- id: youngerthan18\n  type: noop\n  transform: |\n    {\n      result: \"You are younger than 18.\"\n    }"
  validate.yml: "id: validate\ndescription: A simple 'validate' state workflow that checks an email\nstates:\n- id: data\n  type: noop\n  transform: |\n    {\n      email: \"trent.hilliam@vorteil.io\"\n    }\n  transition: validate-email\n- id: validate-email\n  type: validate\n  subject: .\n  schema:\n    type: object\n    properties:\n      email:\n        type: string\n        format: email\n  catch:\n  - error: direktiv.schema.*\n    transition: email-not-valid \n  transition: email-valid\n- id: email-not-valid\n  type: noop\n  transform: |\n    {\n      result: \"Email is not valid.\"\n    }\n- id: email-valid\n  type: noop\n  transform: |\n    {\n      result: \"Email is valid.\"\n    }\n"
kind: ConfigMap
metadata:
  creationTimestamp: "2021-05-24T03:47:10Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:action.yml: {}
        f:consume-event.yml: {}
        f:delay.yml: {}
        f:error.yml: {}
        f:event-and.yml: {}
        f:event-xor.yml: {}
        f:foreach.yml: {}
        f:generate-greeting-event.yml: {}
        f:generate-solve-event.yml: {}
        f:noop.yml: {}
        f:parallel.yml: {}
        f:switch.yml: {}
        f:validate.yml: {}
    manager: kubectl-create
    operation: Update
    time: "2021-05-24T03:47:10Z"
  name: api-wftemplates-cm
  namespace: {{ .Release.Namespace }}
  resourceVersion: "29661"
  uid: abd06562-21d2-4e65-bf23-bc1091e4e320
