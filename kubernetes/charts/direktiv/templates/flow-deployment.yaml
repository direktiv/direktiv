{{- if .Values.withFlow -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "direktiv.fullname" . }}
  labels:
    {{- include "direktiv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "direktiv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "direktiv.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "direktiv.serviceAccountName" . }}
      containers:
        - name: ingress
          image: "{{ .Values.registry }}/{{ .Values.flow.image }}:{{ .Values.flow.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["/bin/direktiv"]
          args: ["-t", "w", "-d"]
          volumeMounts:
          - name: service-template
            mountPath: /etc/config
          {{- if ne (default .Values.certificate "none") "none" }}
          - name: certs
            mountPath: "/etc/certs/direktiv"
            readOnly: true
          {{- end }}
          ports:
            - name: ingress
              containerPort: 6666
              protocol: TCP
            - name: flow
              containerPort: 7777
              protocol: TCP
          env:
          - name: DIREKTIV_INSTANCE_LOGGING_DRIVER
            value: {{ .Values.logDriver}}
          - name: DIREKTIV_FLOW_SIDECAR
            value: {{ .Values.flow.sidecar }}
          - name: DIREKTIV_INGRESS_BIND
            value: "0.0.0.0:6666"
          - name: DIREKTIV_FLOW_BIND
            value: "0.0.0.0:7777"
          - name: "DIREKTIV_FLOW_ENDPOINT"
            value: "{{ include "direktiv.fullname" . }}-flow:7777"
          - name: DIREKTIV_FLOW_EXCHANGE
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}-isolate
                key: exchangeKey
          - name: DIREKTIV_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: db
          - name: DIREKTIV_SECRETS_ENDPOINT
            value:  "localhost:2610"
        - name: secrets
          image: "{{ .Values.registry }}/{{ .Values.secrets.image }}:{{ .Values.secrets.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          {{- if ne (default .Values.certificate "none") "none" }}
          volumeMounts:
          - name: certs
            mountPath: "/etc/certs/direktiv"
            readOnly: true
          {{- end }}
          ports:
            - name: secrets
              containerPort: 2610
              protocol: TCP
          env:
          - name: DIREKTIV_SECRETS_BIND
            value: "127.0.0.1:2610"
          - name: DIREKTIV_SECRETS_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: secretsDb
      volumes:
        - name: service-template
          configMap:
            name: service-template
        {{- if ne (default .Values.certificate "none") "none" }}
        - name: certs
          secret:
            secretName: {{ include "direktiv.fullname" . }}-tls-secret
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
