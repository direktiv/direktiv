{{- if .Values.withFlow -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "direktiv.fullname" . }}
  labels:
    {{- include "direktiv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "direktiv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "direktiv.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 33333
        runAsGroup: 22222
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "direktiv.serviceAccountName" . }}
      containers:
        {{- if .Values.flow.extraContainers }}
        {{ toYaml .Values.flow.extraContainers | indent 8}}
        {{- end }}
        - name: ingress
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "8192Mi"
              cpu: "8"
          image: "{{ .Values.registry }}/{{ .Values.flow.image }}:{{ .Values.flow.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["/bin/direktiv", "--config", "/etc/direktiv/flow-config.yaml"]
          volumeMounts:
          {{- if .Values.flow.extraVolumeMounts -}}
          {{ toYaml .Values.flow.extraVolumeMounts | nindent 10 }}
          {{- end }}
          - name: grpc-config
            mountPath: /etc/direktiv/grpc-config.yaml
            subPath: grpc-config.yaml
          - name: flow-config
            mountPath: /etc/direktiv/flow-config.yaml
            subPath: flow-config.yaml
          {{- if ne .Values.flow.certificates.flow "none" }}
          - name: flowcerts
            mountPath: "/etc/direktiv/certs/flow"
            readOnly: true
          {{- end }}
          {{- if ne .Values.flow.certificates.ingress "none" }}
          - name: ingresscerts
            mountPath: "/etc/direktiv/certs/ingress"
            readOnly: true
          {{- end }}
          {{- if ne .Values.functions.certificate "none" }}
          - name: functionscerts
            mountPath: "/etc/direktiv/certs/functions"
            readOnly: true
          {{- end }}
          {{- if eq .Values.flow.functionsProtocol "https" }}
          - name: podca
            mountPath: "/etc/direktiv/certs/ca"
            readOnly: true
          {{- end }}
          ports:
            - name: ingress
              containerPort: 6666
              protocol: TCP
            - name: flow
              containerPort: 7777
              protocol: TCP
          env:
          - name: DIREKTIV_DEBUG
            value: {{ .Values.debug | quote }}
          - name: DIREKTIV_SERVICE_NAMESPACE
            value: {{ .Values.functions.namespace }}
          - name: DIREKTIV_KUBERNETES_NAMESPACE
            value: {{ .Release.Namespace }}
          {{- if or (ne .Values.http_proxy "") (ne .Values.https_proxy "") }}
          - name: "HTTP_PROXY"
            value: "{{ .Values.http_proxy }}"
          - name: "HTTPS_PROXY"
            value: "{{ .Values.https_proxy }}"
          - name: "NO_PROXY"
            value: "{{ .Values.no_proxy }}"
          {{- end }}
          - name: DIREKTIV_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: db
        - name: secrets
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "1"
          image: "{{ .Values.registry }}/{{ .Values.secrets.image }}:{{ .Values.secrets.tag | default .Chart.AppVersion }}"
          command: ["/bin/secrets"]
          imagePullPolicy: {{ .Values.pullPolicy }}
          volumeMounts:
          {{- if .Values.flow.extraVolumeMounts -}}
          {{ toYaml .Values.flow.extraVolumeMounts | nindent 10 }}
          {{- end }}
          - name: grpc-config
            mountPath: /etc/direktiv/grpc-config.yaml
            subPath: grpc-config.yaml
          ports:
            - name: secrets
              containerPort: 2610
              protocol: TCP
          env:
          - name: DIREKTIV_DEBUG
            value: {{ .Values.debug | quote }}
          - name: DIREKTIV_SECRETS_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: secretsDb
          - name: DIREKTIV_SECRETS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: key
      volumes:
        {{- if .Values.flow.extraVolumes }}
        {{ toYaml .Values.flow.extraVolumes | nindent 8 }}
        {{- end }}
        {{- if eq .Values.flow.functionsProtocol "https" }}
        - name: podca
          secret:
            secretName: {{ .Values.flow.functionsCA }}
        {{- end }}
        - name: grpc-config
          configMap:
            name: {{ include "direktiv.fullname" . }}-config-grpc
        - name: flow-config
          configMap:
            name: {{ include "direktiv.fullname" . }}-config-flow
        {{- if ne  .Values.flow.certificates.flow "none" }}
        - name: flowcerts
          secret:
            secretName: {{ .Values.flow.certificates.flow }}
        {{- end }}
        {{- if ne  .Values.flow.certificates.ingress "none" }}
        - name: ingresscerts
          secret:
            secretName: {{ .Values.flow.certificates.ingress }}
        {{- end }}
        {{- if ne  .Values.functions.certificate "none" }}
        - name: functionscerts
          secret:
            secretName: {{ .Values.functions.certificate }}
        {{- end }}
      {{- with .Values.nodeSelector }}:0

      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
