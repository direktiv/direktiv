{{- if .Values.withAPI -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "direktiv.fullname" . }}-api
  labels:
    {{ include "direktiv.labelsAPI" . | nindent 4 }}-api
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "direktiv.selectorLabelsAPI" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "direktiv.selectorLabelsAPI" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 33333
        runAsGroup: 22222
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "direktiv.serviceAccountName" . }}
      volumes:
      - name: grpc-config
        configMap:
          name: {{ include "direktiv.fullname" . }}-config-grpc
      - name: apiconf
        configMap:
          name: {{ include "direktiv.fullname" . }}-config-api
      - name: wf-templates
        configMap:
          name: api-wftemplates-cm
      - name: api-blocklist
        configMap:
          name: api-blocklistnamespaces-cm
          items:
          - key: blocklist
            path: blocklist
      - name: action-templates
        configMap:
          name: api-actiontemplates-cm
      {{- if ne  .Values.api.certificate "none" }}
      - name: certs
        secret:
          secretName: {{ .Values.api.certificate }}
      {{- end }}
      containers:
      - name: api
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        readinessProbe:
          httpGet:
            path: /api/healthz
            port: 8080
            {{- if ne  .Values.api.certificate "none" }}
            scheme: HTTPS
            {{- end }}
          periodSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "0.25"
          limits:
            memory: "2048Mi"
            cpu: "2"
        image: "{{ .Values.registry }}/{{ .Values.api.image }}:{{ .Values.api.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
          {{- if  .Values.api.key }}
          - name: DIREKTIV_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: apiKey
          {{- end }}
        volumeMounts:
        - name: grpc-config
          mountPath: /etc/direktiv/grpc-config.yaml
          subPath: grpc-config.yaml
        - name: apiconf
          mountPath: "/config"
          readOnly: true
        - name: api-blocklist
          mountPath: /blocklist
          subPath: "blocklist"
        - name: wf-templates
          mountPath: "/tmp/workflow-templates"
        - name: action-templates
          mountPath: "/tmp/action-templates"
        {{- if ne  .Values.api.certificate "none" }}
        - name: certs
          mountPath: "/etc/direktiv/certs/http"
          readOnly: true
        {{- end }}
        ports:
        - containerPort: 8080
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
