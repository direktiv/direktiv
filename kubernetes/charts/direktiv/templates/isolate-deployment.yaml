{{- if .Values.withIsolate -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "direktiv.fullname" . }}-isolate
  labels:
    {{- include "direktiv.labelsIsolate" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "direktiv.selectorLabelsIsolate" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "direktiv.selectorLabelsIsolate" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "direktiv.serviceAccountName" . }}
      containers:
        {{- if .Values.isolate.minio.local }}
        - name: minio
          image: minio/minio
          args: ["gateway", "s3"]
          ports:
            - name: minioui
              containerPort: 9000
              protocol: TCP
          env:
          - name: MINIO_ROOT_USER
            value: ""
          - name: MINIO_ROOT_PASSWORD
            value: ""
        {{- end }}
        - name: isolate
          image: "{{ .Values.registry }}/{{ .Values.isolate.image }}:{{ .Values.isolate.tag | default .Chart.AppVersion }}"
          securityContext:
            privileged: true
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: isolate
              containerPort: 8888
              protocol: TCP
          env:
          - name: DIREKTIV_ISOLATE_BIND
            value: "0.0.0.0:8888"
          - name: DIREKTIV_GRPC_HEALTH
            value: "0"
          - name: DIREKTIV_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: db
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: minioSecretKey
          - name: DIREKTIV_ISOLATION
            value: {{ .Values.isolate.isolation }}
          - name: DIREKTIV_MINIO_ENDPOINT {{ if .Values.isolate.minio.endpoint }}
            value: "{{ .Values.isolate.minio.endpoint }}"  {{ else }}
            value: "{{ include "direktiv.fullname" . }}-support:9000" {{ end }}
          - name: DIREKTIV_MINIO_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: minioAccessKey
          - name: DIREKTIV_MINIO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "direktiv.fullname" . }}
                key: minioSecretKey
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
