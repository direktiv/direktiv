# Default values for direktiv.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

registry: "docker.io"
pullPolicy: Always
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
logDriver: "database"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# support services
withSupport: true
withFlow: true
withUI: true
withAPI: true

supportPersist: false

debug: false

ingress:
  host: ""
  certificate: none
  class: "contour-external"
  auth:
    enabled: false

secrets:
  image: "vorteil/secrets"
  tag: "latest"
  backend: "db"
  db: ""
  key: "01234567890123456789012345678912"
  vault:
    address:    ""
    token:      ""
    tokenPath:  ""
    watchToken: false
    path:       ""
    skipVerify: false

vaultAgent:
  image: "vorteil/vault-agent"
  tag: "latest"
  enable: false

# flow config
flow:
  image: "vorteil/flow"
  tag: "latest"
  exchange: "checkMe"
  sidecar: "vorteil/sidecar"
  sidecarDb: ""
  db: ""
  protocol: "http"
  certificate: none

# ui config
ui:
  image: "vorteil/direktiv-ui"
  tag: "latest"

api:
  image: vorteil/api
  tag: "latest"
  key: ""

uiapiCertificate: none

useNetworkPolicies: false

http_proxy: ""
https_proxy: ""
no_proxy: ""

netShape: "none"

# if using proxy the user needs to be a valid IAM user with access to the database
# e.g. roles/cloudsql.editor. Additionally the service account needs to be mapped
# to to google with:
# serviceAccount:
#   annotations:
#      iam.gke.io/gcp-service-account: IAM_USER@GCP_PROJECT.iam.gserviceaccount.com

gcp:
  gvisor: false
  useSqlProxy: false
  db_instance: ""
  ip_private: false
