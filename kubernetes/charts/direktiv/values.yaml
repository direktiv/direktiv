# Default values for direktiv.
replicaCount: 1

nodeSelector: {}
tolerations: []
affinity: {}

registry: "docker.io"
pullPolicy: Always
imagePullSecrets: []

# if using proxy the user needs to be a valid IAM user with access to the database
# e.g. roles/cloudsql.editor. Additionally the service account needs to be mapped
# to to google with:
# serviceAccount:
#   annotations:
#      iam.gke.io/gcp-service-account: IAM_USER@GCP_PROJECT.iam.gserviceaccount.com
serviceAccount:
  annotations: {}
  name: ""
  create: true

# proxy settings
http_proxy: ""
https_proxy: ""
no_proxy: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# support services
withSupport: true
withFlow: true
withUI: true
withAPI: true

supportPersist: false

# enable debug
debug: false

useNetworkPolicies: false

ingress:
  host: ""
  certificate: none
  class: "contour-external"

# flow config
flow:
  image: "vorteil/flow"
  tag: "latest"
  db: ""
  isolateProtocol: "http"
  certificate: none
  certificates:
    flow: none
    ingress: none
  extraContainers: []
  extraVolumeMounts:
    # - name: service-template
    #   mountPath: /etc/config
  extraVolumes:
    # - name: service-template
    #   configMap:
    #     name: service-template

secrets:
  image: "vorteil/secrets"
  tag: "latest"
  db: ""
  key: "01234567890123456789012345678912"
  extraVolumeMounts: []

# ui config
ui:
  image: "vorteil/direktiv-ui"
  tag: "latest"
  # certificate: direktiv-cert
  certificate: none

api:
  image: vorteil/api
  tag: "latest"
  key: ""
  certificate: none

# Set Send and Recv limits for all grpc clients and servers
grpc:
  server:
    maxSendSize: "4194304"
    maxRecvSize: "4194304"
  client:
    maxSendSize: "4194304"
    maxRecvSize: "4194304"

isolates:
  # namespace to run isolates in
  namespace: direktiv-services-direktiv

  # images for isolate controller, knative sidecar and init-pod
  image: "vorteil/isolates"
  tag: "latest"
  sidecar: "vorteil/sidecar"
  initPod: "vorteil/direktiv-init-pod"

  # number of controller replicas
  replicaCount: 1

  netShape: "10M"

  # database connection, required for pub/sub with flow
  db: ""

  # run pod cleaner for kubernetes < 1.20
  podCleaner: true

  # run init-pod with TLS
  podTLS: false

  # runtime to use, e.g. gvisor
  runtime: "default"

  # extra container for controller pod
  # e.g. database containers for google cloud or logging
  extraContainersPod: []
  extraContainers:
    []
    # - name: cloud-sql-proxy
    #   image: gcr.io/cloudsql-docker/gce-proxy:1.17
    #   command:
    #     - "/cloud_sql_proxy"
    #     - "-instances=mygcpdb=tcp:5432"
    #     - "-ip_address_types=PRIVATE"
    #   securityContext:
    #     runAsNonRoot: true
    #   resources:
    #     requests:
    #       memory: "2Gi"
    #       cpu:    "1"
